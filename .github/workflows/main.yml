name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 1 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  #
  # win64
  #
  build-and-test-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        compiler: ['clang', 'gcc', 'msvc']

    steps:
      - uses: actions/checkout@v2

      - name: Install Clang
        uses: KyleMayes/install-llvm-action@v2.0.3
        with:
          version: "18.1.0"
          directory: ${{ runner.temp }}/llvm

      # - name: Install MinGW
      #   uses: egor-tensin/setup-mingw@v2
      #   with:
      #     platform: x64
      #   if: matrix.compiler == 'gcc'

      - name: Install MSVC
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.compiler == 'msvc'

      - name: Build And Test
        # run: .\scripts\build_and_test.bat ${{ matrix.compiler }}
        run: |
          .\tools\make\make.exe -f .\scripts\generator.mak config=release
          .\tools\make\make.exe -f .\scripts\tests.mak compiler=${{ matrix.compiler }} config=release
        if: matrix.compiler != 'msvc'

      - name: Build And Test (MSVC only)
        run: .\scripts\build_and_test.bat ${{ matrix.compiler }}
        if: matrix.compiler == 'msvc'

  #
  # linux
  #
  build-and-test-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: ['clang', 'gcc']

    steps:
      - uses: actions/checkout@v2

      - name: Install Clang
        uses: KyleMayes/install-llvm-action@v2.0.3
        with:
          version: "18.1.4"
          directory: ${{ runner.temp }}/llvm

      # - name: Install Clang
      #   run: |
      #     sudo apt update
      #     sudo apt install clang-18

      - name: Install GCC
        run: |
          sudo apt update
          sudo apt install gcc

      # - name: Install GCC
      #   uses: egor-tensin/setup-gcc@v1
      #   with:
      #     version: latest
      #     platform: x64

      - name: Build And Test
        # run: ./scripts/build_and_test.sh ${{ matrix.compiler }}
        run: |
          make -f ./scripts/generator.mak config=release
          make -f ./scripts/tests.mak compiler=${{ matrix.compiler }} config=release