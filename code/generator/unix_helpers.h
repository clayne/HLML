#if defined( __APPLE__ ) || defined( __linux__ )

#pragma once

#include <stdio.h>

#include <errno.h>

#define ENUM_TO_STRING( x ) case x: return #x

static const char* ErrnoToString( const int errnoValue ) {
	// DM: some of these don't seem to exist for me?
	// I'm leaving them in but commented so I can out why in the mean time
	// and decide whether I need to keep them or not
	switch ( errnoValue ) {
		ENUM_TO_STRING( E2BIG );
		ENUM_TO_STRING( EACCES );
		ENUM_TO_STRING( EADDRINUSE );
		ENUM_TO_STRING( EADDRNOTAVAIL );
		ENUM_TO_STRING( EAFNOSUPPORT );
		ENUM_TO_STRING( EAGAIN );
		ENUM_TO_STRING( EALREADY );
//		ENUM_TO_STRING( EBADE );
		ENUM_TO_STRING( EBADF );
//		ENUM_TO_STRING( EBADFD );
		ENUM_TO_STRING( EBADMSG );
//		ENUM_TO_STRING( EBADR );
//		ENUM_TO_STRING( EBADRQC );
//		ENUM_TO_STRING( EBADSLT );
		ENUM_TO_STRING( EBUSY );
		ENUM_TO_STRING( ECANCELED );
		ENUM_TO_STRING( ECHILD );
//		ENUM_TO_STRING( ECHRNG );
//		ENUM_TO_STRING( ECOMM );
		ENUM_TO_STRING( ECONNABORTED );
		ENUM_TO_STRING( ECONNREFUSED );
		ENUM_TO_STRING( ECONNRESET );
		ENUM_TO_STRING( EDEADLK );
//		ENUM_TO_STRING( EDEADLOCK );
		ENUM_TO_STRING( EDESTADDRREQ );
		ENUM_TO_STRING( EDOM );
		ENUM_TO_STRING( EDQUOT );
		ENUM_TO_STRING( EEXIST );
		ENUM_TO_STRING( EFAULT );
		ENUM_TO_STRING( EFBIG );
//		ENUM_TO_STRING( EHOSTDOWN );
		ENUM_TO_STRING( EHOSTUNREACH );
//		ENUM_TO_STRING( EHWPOISON );
		ENUM_TO_STRING( EIDRM );
		ENUM_TO_STRING( EILSEQ );
		ENUM_TO_STRING( EINPROGRESS );
		ENUM_TO_STRING( EINTR );
		ENUM_TO_STRING( EINVAL );
		ENUM_TO_STRING( EIO );
		ENUM_TO_STRING( EISCONN );
		ENUM_TO_STRING( EISDIR );
//		ENUM_TO_STRING( EISNAM );
//		ENUM_TO_STRING( EKEYEXPIRED );
//		ENUM_TO_STRING( EKEYREJECTED );
//		ENUM_TO_STRING( EKEYREVOKED );
//		ENUM_TO_STRING( EL2HLT );
//		ENUM_TO_STRING( EL2NSYNC );
//		ENUM_TO_STRING( EL3HLT );
//		ENUM_TO_STRING( EL3RST );
//		ENUM_TO_STRING( ELIBACC );
//		ENUM_TO_STRING( ELIBBAD );
//		ENUM_TO_STRING( ELIBMAX );
//		ENUM_TO_STRING( ELIBSCN );
//		ENUM_TO_STRING( ELIBEXEC );
//		ENUM_TO_STRING( ELNRANGE );
		ENUM_TO_STRING( ELOOP );
//		ENUM_TO_STRING( EMEDIUMTYPE );
		ENUM_TO_STRING( EMFILE );
		ENUM_TO_STRING( EMLINK );
		ENUM_TO_STRING( EMSGSIZE );
		ENUM_TO_STRING( EMULTIHOP );
		ENUM_TO_STRING( ENAMETOOLONG );
		ENUM_TO_STRING( ENETDOWN );
		ENUM_TO_STRING( ENETRESET );
		ENUM_TO_STRING( ENETUNREACH );
		ENUM_TO_STRING( ENFILE );
//		ENUM_TO_STRING( ENOANO );
		ENUM_TO_STRING( ENOBUFS );
		ENUM_TO_STRING( ENODATA );
		ENUM_TO_STRING( ENODEV );
		ENUM_TO_STRING( ENOENT );
		ENUM_TO_STRING( ENOEXEC );
//		ENUM_TO_STRING( ENOKEY );
		ENUM_TO_STRING( ENOLCK );
		ENUM_TO_STRING( ENOLINK );
		ENUM_TO_STRING( ENOMEDIUM );
		ENUM_TO_STRING( ENOMEM );
		ENUM_TO_STRING( ENOMSG );
//		ENUM_TO_STRING( ENONET );
//		ENUM_TO_STRING( ENOPKG );
		ENUM_TO_STRING( ENOPROTOOPT );
		ENUM_TO_STRING( ENOSPC );
		ENUM_TO_STRING( ENOSR );
		ENUM_TO_STRING( ENOSTR );
		ENUM_TO_STRING( ENOSYS );
		ENUM_TO_STRING( ENOTBLK );
		ENUM_TO_STRING( ENOTCONN );
		ENUM_TO_STRING( ENOTDIR );
		ENUM_TO_STRING( ENOTEMPTY );
		ENUM_TO_STRING( ENOTRECOVERABLE );
		ENUM_TO_STRING( ENOTSOCK );
		ENUM_TO_STRING( ENOTSUP );
		ENUM_TO_STRING( ENOTTY );
//		ENUM_TO_STRING( ENOTUNIQ );
		ENUM_TO_STRING( ENXIO );
//		ENUM_TO_STRING( EOPNOTSUPP );		// duplicate
		ENUM_TO_STRING( EOVERFLOW );
		ENUM_TO_STRING( EOWNERDEAD );
		ENUM_TO_STRING( EPERM );
//		ENUM_TO_STRING( EPFNOSUPPORT );
		ENUM_TO_STRING( EPIPE );
		ENUM_TO_STRING( EPROTO );
		ENUM_TO_STRING( EPROTONOSUPPORT );
		ENUM_TO_STRING( EPROTOTYPE );
		ENUM_TO_STRING( ERANGE );
//		ENUM_TO_STRING( EREMCHG );
//		ENUM_TO_STRING( EREMOTE );
//		ENUM_TO_STRING( EREMOTEIO );
//		ENUM_TO_STRING( ERESTART );
//		ENUM_TO_STRING( ERFKILL );
		ENUM_TO_STRING( EROFS );
//		ENUM_TO_STRING( ESHUTDOWN );
		ENUM_TO_STRING( ESPIPE );
//		ENUM_TO_STRING( ESTOCKNOSUPPORT );
		ENUM_TO_STRING( ESRCH );
		ENUM_TO_STRING( ESTALE );
//		ENUM_TO_STRING( ESTRPIPE );
		ENUM_TO_STRING( ETIME );
		ENUM_TO_STRING( ETIMEDOUT );
//		ENUM_TO_STRING( ETOOMANYREFS );
		ENUM_TO_STRING( ETXTBSY );
//		ENUM_TO_STRING( EUCLEAN );
//		ENUM_TO_STRING( EUNATCH );
//		ENUM_TO_STRING( EUSERS );
//		ENUM_TO_STRING( EWOULDBLOCK );		// duplicate
		ENUM_TO_STRING( EXDEV );
//		ENUM_TO_STRING( EXFULL );

		default:
			printf( "ERROR: Bad errno value \"%d\" passed into %s.\n", errnoValue, __FUNCTION__ );
			return NULL;
	}
}

#undef ENUM_TO_STRING

#endif // defined( __APPLE__ ) || defined( __linux__ )
