/*
===========================================================================

HLML.

MIT License

Copyright (c) 2019 Dan Moody

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

===========================================================================
*/

// THIS FILE WAS AUTOMATICALLY GENERATED BY A TOOL.
// EDITING THIS FILE MAY CAUSE SIDE EFFECTS.
// DO SO AT YOUR OWN RISK.

#pragma once

#include "hlml_types.h"
#include "hlml_defines.h"

#include "bool3_swizzle_types.h"

// ignore prohibition of anymous structs for GCC
#if defined( __clang__ ) || defined( __GNUC__ )
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wpedantic"
#elif defined( _MSC_VER )
#pragma warning( push )
#pragma warning( disable : 4201 ) // C4201 - nonstandard extension used : nameless struct/union
#endif

struct bool3
{
	union
	{
		struct
		{
			bool32_t x;
			bool32_t y;
			bool32_t z;
		};

		struct
		{
			bool32_t r;
			bool32_t g;
			bool32_t b;
		};

		bool32_t v[3];

		// swizzles
		bool3_swizzle_3_to_2_xx_t xx;
		bool3_swizzle_3_to_2_yx_t yx;
		bool3_swizzle_3_to_2_zx_t zx;
		bool3_swizzle_3_to_2_xy_t xy;
		bool3_swizzle_3_to_2_yy_t yy;
		bool3_swizzle_3_to_2_zy_t zy;
		bool3_swizzle_3_to_2_xz_t xz;
		bool3_swizzle_3_to_2_yz_t yz;
		bool3_swizzle_3_to_2_zz_t zz;
		bool3_swizzle_3_to_3_xxx_t xxx;
		bool3_swizzle_3_to_3_yxx_t yxx;
		bool3_swizzle_3_to_3_zxx_t zxx;
		bool3_swizzle_3_to_3_xyx_t xyx;
		bool3_swizzle_3_to_3_yyx_t yyx;
		bool3_swizzle_3_to_3_zyx_t zyx;
		bool3_swizzle_3_to_3_xzx_t xzx;
		bool3_swizzle_3_to_3_yzx_t yzx;
		bool3_swizzle_3_to_3_zzx_t zzx;
		bool3_swizzle_3_to_3_xxy_t xxy;
		bool3_swizzle_3_to_3_yxy_t yxy;
		bool3_swizzle_3_to_3_zxy_t zxy;
		bool3_swizzle_3_to_3_xyy_t xyy;
		bool3_swizzle_3_to_3_yyy_t yyy;
		bool3_swizzle_3_to_3_zyy_t zyy;
		bool3_swizzle_3_to_3_xzy_t xzy;
		bool3_swizzle_3_to_3_yzy_t yzy;
		bool3_swizzle_3_to_3_zzy_t zzy;
		bool3_swizzle_3_to_3_xxz_t xxz;
		bool3_swizzle_3_to_3_yxz_t yxz;
		bool3_swizzle_3_to_3_zxz_t zxz;
		bool3_swizzle_3_to_3_xyz_t xyz;
		bool3_swizzle_3_to_3_yyz_t yyz;
		bool3_swizzle_3_to_3_zyz_t zyz;
		bool3_swizzle_3_to_3_xzz_t xzz;
		bool3_swizzle_3_to_3_yzz_t yzz;
		bool3_swizzle_3_to_3_zzz_t zzz;
		bool3_swizzle_3_to_4_xxxx_t xxxx;
		bool3_swizzle_3_to_4_yxxx_t yxxx;
		bool3_swizzle_3_to_4_zxxx_t zxxx;
		bool3_swizzle_3_to_4_xyxx_t xyxx;
		bool3_swizzle_3_to_4_yyxx_t yyxx;
		bool3_swizzle_3_to_4_zyxx_t zyxx;
		bool3_swizzle_3_to_4_xzxx_t xzxx;
		bool3_swizzle_3_to_4_yzxx_t yzxx;
		bool3_swizzle_3_to_4_zzxx_t zzxx;
		bool3_swizzle_3_to_4_xxyx_t xxyx;
		bool3_swizzle_3_to_4_yxyx_t yxyx;
		bool3_swizzle_3_to_4_zxyx_t zxyx;
		bool3_swizzle_3_to_4_xyyx_t xyyx;
		bool3_swizzle_3_to_4_yyyx_t yyyx;
		bool3_swizzle_3_to_4_zyyx_t zyyx;
		bool3_swizzle_3_to_4_xzyx_t xzyx;
		bool3_swizzle_3_to_4_yzyx_t yzyx;
		bool3_swizzle_3_to_4_zzyx_t zzyx;
		bool3_swizzle_3_to_4_xxzx_t xxzx;
		bool3_swizzle_3_to_4_yxzx_t yxzx;
		bool3_swizzle_3_to_4_zxzx_t zxzx;
		bool3_swizzle_3_to_4_xyzx_t xyzx;
		bool3_swizzle_3_to_4_yyzx_t yyzx;
		bool3_swizzle_3_to_4_zyzx_t zyzx;
		bool3_swizzle_3_to_4_xzzx_t xzzx;
		bool3_swizzle_3_to_4_yzzx_t yzzx;
		bool3_swizzle_3_to_4_zzzx_t zzzx;
		bool3_swizzle_3_to_4_xxxy_t xxxy;
		bool3_swizzle_3_to_4_yxxy_t yxxy;
		bool3_swizzle_3_to_4_zxxy_t zxxy;
		bool3_swizzle_3_to_4_xyxy_t xyxy;
		bool3_swizzle_3_to_4_yyxy_t yyxy;
		bool3_swizzle_3_to_4_zyxy_t zyxy;
		bool3_swizzle_3_to_4_xzxy_t xzxy;
		bool3_swizzle_3_to_4_yzxy_t yzxy;
		bool3_swizzle_3_to_4_zzxy_t zzxy;
		bool3_swizzle_3_to_4_xxyy_t xxyy;
		bool3_swizzle_3_to_4_yxyy_t yxyy;
		bool3_swizzle_3_to_4_zxyy_t zxyy;
		bool3_swizzle_3_to_4_xyyy_t xyyy;
		bool3_swizzle_3_to_4_yyyy_t yyyy;
		bool3_swizzle_3_to_4_zyyy_t zyyy;
		bool3_swizzle_3_to_4_xzyy_t xzyy;
		bool3_swizzle_3_to_4_yzyy_t yzyy;
		bool3_swizzle_3_to_4_zzyy_t zzyy;
		bool3_swizzle_3_to_4_xxzy_t xxzy;
		bool3_swizzle_3_to_4_yxzy_t yxzy;
		bool3_swizzle_3_to_4_zxzy_t zxzy;
		bool3_swizzle_3_to_4_xyzy_t xyzy;
		bool3_swizzle_3_to_4_yyzy_t yyzy;
		bool3_swizzle_3_to_4_zyzy_t zyzy;
		bool3_swizzle_3_to_4_xzzy_t xzzy;
		bool3_swizzle_3_to_4_yzzy_t yzzy;
		bool3_swizzle_3_to_4_zzzy_t zzzy;
		bool3_swizzle_3_to_4_xxxz_t xxxz;
		bool3_swizzle_3_to_4_yxxz_t yxxz;
		bool3_swizzle_3_to_4_zxxz_t zxxz;
		bool3_swizzle_3_to_4_xyxz_t xyxz;
		bool3_swizzle_3_to_4_yyxz_t yyxz;
		bool3_swizzle_3_to_4_zyxz_t zyxz;
		bool3_swizzle_3_to_4_xzxz_t xzxz;
		bool3_swizzle_3_to_4_yzxz_t yzxz;
		bool3_swizzle_3_to_4_zzxz_t zzxz;
		bool3_swizzle_3_to_4_xxyz_t xxyz;
		bool3_swizzle_3_to_4_yxyz_t yxyz;
		bool3_swizzle_3_to_4_zxyz_t zxyz;
		bool3_swizzle_3_to_4_xyyz_t xyyz;
		bool3_swizzle_3_to_4_yyyz_t yyyz;
		bool3_swizzle_3_to_4_zyyz_t zyyz;
		bool3_swizzle_3_to_4_xzyz_t xzyz;
		bool3_swizzle_3_to_4_yzyz_t yzyz;
		bool3_swizzle_3_to_4_zzyz_t zzyz;
		bool3_swizzle_3_to_4_xxzz_t xxzz;
		bool3_swizzle_3_to_4_yxzz_t yxzz;
		bool3_swizzle_3_to_4_zxzz_t zxzz;
		bool3_swizzle_3_to_4_xyzz_t xyzz;
		bool3_swizzle_3_to_4_yyzz_t yyzz;
		bool3_swizzle_3_to_4_zyzz_t zyzz;
		bool3_swizzle_3_to_4_xzzz_t xzzz;
		bool3_swizzle_3_to_4_yzzz_t yzzz;
		bool3_swizzle_3_to_4_zzzz_t zzzz;

		bool3_swizzle_3_to_2_rr_t rr;
		bool3_swizzle_3_to_2_gr_t gr;
		bool3_swizzle_3_to_2_br_t br;
		bool3_swizzle_3_to_2_rg_t rg;
		bool3_swizzle_3_to_2_gg_t gg;
		bool3_swizzle_3_to_2_bg_t bg;
		bool3_swizzle_3_to_2_rb_t rb;
		bool3_swizzle_3_to_2_gb_t gb;
		bool3_swizzle_3_to_2_bb_t bb;
		bool3_swizzle_3_to_3_rrr_t rrr;
		bool3_swizzle_3_to_3_grr_t grr;
		bool3_swizzle_3_to_3_brr_t brr;
		bool3_swizzle_3_to_3_rgr_t rgr;
		bool3_swizzle_3_to_3_ggr_t ggr;
		bool3_swizzle_3_to_3_bgr_t bgr;
		bool3_swizzle_3_to_3_rbr_t rbr;
		bool3_swizzle_3_to_3_gbr_t gbr;
		bool3_swizzle_3_to_3_bbr_t bbr;
		bool3_swizzle_3_to_3_rrg_t rrg;
		bool3_swizzle_3_to_3_grg_t grg;
		bool3_swizzle_3_to_3_brg_t brg;
		bool3_swizzle_3_to_3_rgg_t rgg;
		bool3_swizzle_3_to_3_ggg_t ggg;
		bool3_swizzle_3_to_3_bgg_t bgg;
		bool3_swizzle_3_to_3_rbg_t rbg;
		bool3_swizzle_3_to_3_gbg_t gbg;
		bool3_swizzle_3_to_3_bbg_t bbg;
		bool3_swizzle_3_to_3_rrb_t rrb;
		bool3_swizzle_3_to_3_grb_t grb;
		bool3_swizzle_3_to_3_brb_t brb;
		bool3_swizzle_3_to_3_rgb_t rgb;
		bool3_swizzle_3_to_3_ggb_t ggb;
		bool3_swizzle_3_to_3_bgb_t bgb;
		bool3_swizzle_3_to_3_rbb_t rbb;
		bool3_swizzle_3_to_3_gbb_t gbb;
		bool3_swizzle_3_to_3_bbb_t bbb;
		bool3_swizzle_3_to_4_rrrr_t rrrr;
		bool3_swizzle_3_to_4_grrr_t grrr;
		bool3_swizzle_3_to_4_brrr_t brrr;
		bool3_swizzle_3_to_4_rgrr_t rgrr;
		bool3_swizzle_3_to_4_ggrr_t ggrr;
		bool3_swizzle_3_to_4_bgrr_t bgrr;
		bool3_swizzle_3_to_4_rbrr_t rbrr;
		bool3_swizzle_3_to_4_gbrr_t gbrr;
		bool3_swizzle_3_to_4_bbrr_t bbrr;
		bool3_swizzle_3_to_4_rrgr_t rrgr;
		bool3_swizzle_3_to_4_grgr_t grgr;
		bool3_swizzle_3_to_4_brgr_t brgr;
		bool3_swizzle_3_to_4_rggr_t rggr;
		bool3_swizzle_3_to_4_gggr_t gggr;
		bool3_swizzle_3_to_4_bggr_t bggr;
		bool3_swizzle_3_to_4_rbgr_t rbgr;
		bool3_swizzle_3_to_4_gbgr_t gbgr;
		bool3_swizzle_3_to_4_bbgr_t bbgr;
		bool3_swizzle_3_to_4_rrbr_t rrbr;
		bool3_swizzle_3_to_4_grbr_t grbr;
		bool3_swizzle_3_to_4_brbr_t brbr;
		bool3_swizzle_3_to_4_rgbr_t rgbr;
		bool3_swizzle_3_to_4_ggbr_t ggbr;
		bool3_swizzle_3_to_4_bgbr_t bgbr;
		bool3_swizzle_3_to_4_rbbr_t rbbr;
		bool3_swizzle_3_to_4_gbbr_t gbbr;
		bool3_swizzle_3_to_4_bbbr_t bbbr;
		bool3_swizzle_3_to_4_rrrg_t rrrg;
		bool3_swizzle_3_to_4_grrg_t grrg;
		bool3_swizzle_3_to_4_brrg_t brrg;
		bool3_swizzle_3_to_4_rgrg_t rgrg;
		bool3_swizzle_3_to_4_ggrg_t ggrg;
		bool3_swizzle_3_to_4_bgrg_t bgrg;
		bool3_swizzle_3_to_4_rbrg_t rbrg;
		bool3_swizzle_3_to_4_gbrg_t gbrg;
		bool3_swizzle_3_to_4_bbrg_t bbrg;
		bool3_swizzle_3_to_4_rrgg_t rrgg;
		bool3_swizzle_3_to_4_grgg_t grgg;
		bool3_swizzle_3_to_4_brgg_t brgg;
		bool3_swizzle_3_to_4_rggg_t rggg;
		bool3_swizzle_3_to_4_gggg_t gggg;
		bool3_swizzle_3_to_4_bggg_t bggg;
		bool3_swizzle_3_to_4_rbgg_t rbgg;
		bool3_swizzle_3_to_4_gbgg_t gbgg;
		bool3_swizzle_3_to_4_bbgg_t bbgg;
		bool3_swizzle_3_to_4_rrbg_t rrbg;
		bool3_swizzle_3_to_4_grbg_t grbg;
		bool3_swizzle_3_to_4_brbg_t brbg;
		bool3_swizzle_3_to_4_rgbg_t rgbg;
		bool3_swizzle_3_to_4_ggbg_t ggbg;
		bool3_swizzle_3_to_4_bgbg_t bgbg;
		bool3_swizzle_3_to_4_rbbg_t rbbg;
		bool3_swizzle_3_to_4_gbbg_t gbbg;
		bool3_swizzle_3_to_4_bbbg_t bbbg;
		bool3_swizzle_3_to_4_rrrb_t rrrb;
		bool3_swizzle_3_to_4_grrb_t grrb;
		bool3_swizzle_3_to_4_brrb_t brrb;
		bool3_swizzle_3_to_4_rgrb_t rgrb;
		bool3_swizzle_3_to_4_ggrb_t ggrb;
		bool3_swizzle_3_to_4_bgrb_t bgrb;
		bool3_swizzle_3_to_4_rbrb_t rbrb;
		bool3_swizzle_3_to_4_gbrb_t gbrb;
		bool3_swizzle_3_to_4_bbrb_t bbrb;
		bool3_swizzle_3_to_4_rrgb_t rrgb;
		bool3_swizzle_3_to_4_grgb_t grgb;
		bool3_swizzle_3_to_4_brgb_t brgb;
		bool3_swizzle_3_to_4_rggb_t rggb;
		bool3_swizzle_3_to_4_gggb_t gggb;
		bool3_swizzle_3_to_4_bggb_t bggb;
		bool3_swizzle_3_to_4_rbgb_t rbgb;
		bool3_swizzle_3_to_4_gbgb_t gbgb;
		bool3_swizzle_3_to_4_bbgb_t bbgb;
		bool3_swizzle_3_to_4_rrbb_t rrbb;
		bool3_swizzle_3_to_4_grbb_t grbb;
		bool3_swizzle_3_to_4_brbb_t brbb;
		bool3_swizzle_3_to_4_rgbb_t rgbb;
		bool3_swizzle_3_to_4_ggbb_t ggbb;
		bool3_swizzle_3_to_4_bgbb_t bgbb;
		bool3_swizzle_3_to_4_rbbb_t rbbb;
		bool3_swizzle_3_to_4_gbbb_t gbbb;
		bool3_swizzle_3_to_4_bbbb_t bbbb;
	};

	// Default constructor.
	HLML_INLINE bool3() {}

	// Initialises all components of the vector to the given scalar.
	HLML_INLINE explicit bool3( const bool32_t scalar );

	// Initialises all components of the vector to the corresponding scalars.
	HLML_INLINE bool3( const bool32_t x, const bool32_t y, const bool32_t z );

	// Copy constructor.  Copies all elements of 'other' into the vector.
	HLML_INLINE bool3( const bool2& other );

	// Copy constructor.  Copies all elements of 'other' into the vector.
	HLML_INLINE bool3( const bool3& other );

	~bool3() {}

	// Copies all elements of 'other' into the vector.
	HLML_INLINE bool3 operator=( const bool2& other );

	// Copies all elements of 'other' into the vector.
	HLML_INLINE bool3 operator=( const bool3& other );

	// Returns the vector component at the given index.
	// Index CANNOT be lower than 0 or greater than 2.
	HLML_INLINE bool32_t& operator[]( const int32_t index );

	// Returns the vector component at the given index.
	// Index CANNOT be lower than 0 or greater than 2.
	HLML_INLINE const bool32_t& operator[]( const int32_t index ) const;
};

#if defined( __clang__ ) || defined( __GNUC__ )
#pragma GCC diagnostic pop
#elif defined( _MSC_VER )
#pragma warning( pop )
#endif

