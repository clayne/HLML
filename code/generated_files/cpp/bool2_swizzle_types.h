/*
===========================================================================

HLML.

MIT License

Copyright (c) 2019 Dan Moody

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

===========================================================================
*/

// THIS FILE WAS AUTOMATICALLY GENERATED BY A TOOL.
// EDITING THIS FILE MAY CAUSE SIDE EFFECTS.
// DO SO AT YOUR OWN RISK.

#pragma once

struct bool2;
struct bool3;
struct bool4;

struct bool2_swizzle_2_to_2_xx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool2() const;
};

struct bool2_swizzle_2_to_2_yx_t
{
	bool32_t v[2];

	HLML_INLINE bool2 operator=( const bool2& vec );

	HLML_INLINE operator bool2() const;
};

struct bool2_swizzle_2_to_2_xy_t
{
	bool32_t v[2];

	HLML_INLINE bool2 operator=( const bool2& vec );

	HLML_INLINE operator bool2() const;
};

struct bool2_swizzle_2_to_2_yy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool2() const;
};

struct bool2_swizzle_2_to_3_xxx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_yxx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_xyx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_yyx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_xxy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_yxy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_xyy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_yyy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_4_xxxx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_yxxx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_xyxx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_yyxx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_xxyx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_yxyx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_xyyx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_yyyx_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_xxxy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_yxxy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_xyxy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_yyxy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_xxyy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_yxyy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_xyyy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_yyyy_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_2_rr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool2() const;
};

struct bool2_swizzle_2_to_2_gr_t
{
	bool32_t v[2];

	HLML_INLINE bool2 operator=( const bool2& vec );

	HLML_INLINE operator bool2() const;
};

struct bool2_swizzle_2_to_2_rg_t
{
	bool32_t v[2];

	HLML_INLINE bool2 operator=( const bool2& vec );

	HLML_INLINE operator bool2() const;
};

struct bool2_swizzle_2_to_2_gg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool2() const;
};

struct bool2_swizzle_2_to_3_rrr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_grr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_rgr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_ggr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_rrg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_grg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_rgg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_3_ggg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool3() const;
};

struct bool2_swizzle_2_to_4_rrrr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_grrr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_rgrr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_ggrr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_rrgr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_grgr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_rggr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_gggr_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_rrrg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_grrg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_rgrg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_ggrg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_rrgg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_grgg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_rggg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

struct bool2_swizzle_2_to_4_gggg_t
{
	bool32_t v[2];

	HLML_INLINE operator bool4() const;
};

