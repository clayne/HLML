/*
===========================================================================

HLML.

MIT License

Copyright (c) 2019 Dan Moody

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

===========================================================================
*/

// THIS FILE WAS AUTOMATICALLY GENERATED BY A TOOL.
// EDITING THIS FILE MAY CAUSE SIDE EFFECTS.
// DO SO AT YOUR OWN RISK.

#pragma once

#include "bool4_swizzle_types.h"

// xyzw swizzles
bool4_swizzle_4_to_2_xx_t::operator bool2() const { return bool2( v[0], v[0] ); }

bool2 bool4_swizzle_4_to_2_yx_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_yx_t::operator bool2() const { return bool2( v[1], v[0] ); }

bool2 bool4_swizzle_4_to_2_zx_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_zx_t::operator bool2() const { return bool2( v[2], v[0] ); }

bool2 bool4_swizzle_4_to_2_wx_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_wx_t::operator bool2() const { return bool2( v[3], v[0] ); }

bool2 bool4_swizzle_4_to_2_xy_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_xy_t::operator bool2() const { return bool2( v[0], v[1] ); }
bool4_swizzle_4_to_2_yy_t::operator bool2() const { return bool2( v[1], v[1] ); }

bool2 bool4_swizzle_4_to_2_zy_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_zy_t::operator bool2() const { return bool2( v[2], v[1] ); }

bool2 bool4_swizzle_4_to_2_wy_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_wy_t::operator bool2() const { return bool2( v[3], v[1] ); }

bool2 bool4_swizzle_4_to_2_xz_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_xz_t::operator bool2() const { return bool2( v[0], v[2] ); }

bool2 bool4_swizzle_4_to_2_yz_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_yz_t::operator bool2() const { return bool2( v[1], v[2] ); }
bool4_swizzle_4_to_2_zz_t::operator bool2() const { return bool2( v[2], v[2] ); }

bool2 bool4_swizzle_4_to_2_wz_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_wz_t::operator bool2() const { return bool2( v[3], v[2] ); }

bool2 bool4_swizzle_4_to_2_xw_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_xw_t::operator bool2() const { return bool2( v[0], v[3] ); }

bool2 bool4_swizzle_4_to_2_yw_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_yw_t::operator bool2() const { return bool2( v[1], v[3] ); }

bool2 bool4_swizzle_4_to_2_zw_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_zw_t::operator bool2() const { return bool2( v[2], v[3] ); }
bool4_swizzle_4_to_2_ww_t::operator bool2() const { return bool2( v[3], v[3] ); }
bool4_swizzle_4_to_3_xxx_t::operator bool3() const { return bool3( v[0], v[0], v[0] ); }
bool4_swizzle_4_to_3_yxx_t::operator bool3() const { return bool3( v[1], v[0], v[0] ); }
bool4_swizzle_4_to_3_zxx_t::operator bool3() const { return bool3( v[2], v[0], v[0] ); }
bool4_swizzle_4_to_3_wxx_t::operator bool3() const { return bool3( v[3], v[0], v[0] ); }
bool4_swizzle_4_to_3_xyx_t::operator bool3() const { return bool3( v[0], v[1], v[0] ); }
bool4_swizzle_4_to_3_yyx_t::operator bool3() const { return bool3( v[1], v[1], v[0] ); }

bool3 bool4_swizzle_4_to_3_zyx_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_zyx_t::operator bool3() const { return bool3( v[2], v[1], v[0] ); }

bool3 bool4_swizzle_4_to_3_wyx_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_wyx_t::operator bool3() const { return bool3( v[3], v[1], v[0] ); }
bool4_swizzle_4_to_3_xzx_t::operator bool3() const { return bool3( v[0], v[2], v[0] ); }

bool3 bool4_swizzle_4_to_3_yzx_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_yzx_t::operator bool3() const { return bool3( v[1], v[2], v[0] ); }
bool4_swizzle_4_to_3_zzx_t::operator bool3() const { return bool3( v[2], v[2], v[0] ); }

bool3 bool4_swizzle_4_to_3_wzx_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_wzx_t::operator bool3() const { return bool3( v[3], v[2], v[0] ); }
bool4_swizzle_4_to_3_xwx_t::operator bool3() const { return bool3( v[0], v[3], v[0] ); }

bool3 bool4_swizzle_4_to_3_ywx_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_ywx_t::operator bool3() const { return bool3( v[1], v[3], v[0] ); }

bool3 bool4_swizzle_4_to_3_zwx_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_zwx_t::operator bool3() const { return bool3( v[2], v[3], v[0] ); }
bool4_swizzle_4_to_3_wwx_t::operator bool3() const { return bool3( v[3], v[3], v[0] ); }
bool4_swizzle_4_to_3_xxy_t::operator bool3() const { return bool3( v[0], v[0], v[1] ); }
bool4_swizzle_4_to_3_yxy_t::operator bool3() const { return bool3( v[1], v[0], v[1] ); }

bool3 bool4_swizzle_4_to_3_zxy_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_zxy_t::operator bool3() const { return bool3( v[2], v[0], v[1] ); }

bool3 bool4_swizzle_4_to_3_wxy_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_wxy_t::operator bool3() const { return bool3( v[3], v[0], v[1] ); }
bool4_swizzle_4_to_3_xyy_t::operator bool3() const { return bool3( v[0], v[1], v[1] ); }
bool4_swizzle_4_to_3_yyy_t::operator bool3() const { return bool3( v[1], v[1], v[1] ); }
bool4_swizzle_4_to_3_zyy_t::operator bool3() const { return bool3( v[2], v[1], v[1] ); }
bool4_swizzle_4_to_3_wyy_t::operator bool3() const { return bool3( v[3], v[1], v[1] ); }

bool3 bool4_swizzle_4_to_3_xzy_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_xzy_t::operator bool3() const { return bool3( v[0], v[2], v[1] ); }
bool4_swizzle_4_to_3_yzy_t::operator bool3() const { return bool3( v[1], v[2], v[1] ); }
bool4_swizzle_4_to_3_zzy_t::operator bool3() const { return bool3( v[2], v[2], v[1] ); }

bool3 bool4_swizzle_4_to_3_wzy_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_wzy_t::operator bool3() const { return bool3( v[3], v[2], v[1] ); }

bool3 bool4_swizzle_4_to_3_xwy_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_xwy_t::operator bool3() const { return bool3( v[0], v[3], v[1] ); }
bool4_swizzle_4_to_3_ywy_t::operator bool3() const { return bool3( v[1], v[3], v[1] ); }

bool3 bool4_swizzle_4_to_3_zwy_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_zwy_t::operator bool3() const { return bool3( v[2], v[3], v[1] ); }
bool4_swizzle_4_to_3_wwy_t::operator bool3() const { return bool3( v[3], v[3], v[1] ); }
bool4_swizzle_4_to_3_xxz_t::operator bool3() const { return bool3( v[0], v[0], v[2] ); }

bool3 bool4_swizzle_4_to_3_yxz_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_yxz_t::operator bool3() const { return bool3( v[1], v[0], v[2] ); }
bool4_swizzle_4_to_3_zxz_t::operator bool3() const { return bool3( v[2], v[0], v[2] ); }

bool3 bool4_swizzle_4_to_3_wxz_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_wxz_t::operator bool3() const { return bool3( v[3], v[0], v[2] ); }

bool3 bool4_swizzle_4_to_3_xyz_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_xyz_t::operator bool3() const { return bool3( v[0], v[1], v[2] ); }
bool4_swizzle_4_to_3_yyz_t::operator bool3() const { return bool3( v[1], v[1], v[2] ); }
bool4_swizzle_4_to_3_zyz_t::operator bool3() const { return bool3( v[2], v[1], v[2] ); }

bool3 bool4_swizzle_4_to_3_wyz_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_wyz_t::operator bool3() const { return bool3( v[3], v[1], v[2] ); }
bool4_swizzle_4_to_3_xzz_t::operator bool3() const { return bool3( v[0], v[2], v[2] ); }
bool4_swizzle_4_to_3_yzz_t::operator bool3() const { return bool3( v[1], v[2], v[2] ); }
bool4_swizzle_4_to_3_zzz_t::operator bool3() const { return bool3( v[2], v[2], v[2] ); }
bool4_swizzle_4_to_3_wzz_t::operator bool3() const { return bool3( v[3], v[2], v[2] ); }

bool3 bool4_swizzle_4_to_3_xwz_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_xwz_t::operator bool3() const { return bool3( v[0], v[3], v[2] ); }

bool3 bool4_swizzle_4_to_3_ywz_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_ywz_t::operator bool3() const { return bool3( v[1], v[3], v[2] ); }
bool4_swizzle_4_to_3_zwz_t::operator bool3() const { return bool3( v[2], v[3], v[2] ); }
bool4_swizzle_4_to_3_wwz_t::operator bool3() const { return bool3( v[3], v[3], v[2] ); }
bool4_swizzle_4_to_3_xxw_t::operator bool3() const { return bool3( v[0], v[0], v[3] ); }

bool3 bool4_swizzle_4_to_3_yxw_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_yxw_t::operator bool3() const { return bool3( v[1], v[0], v[3] ); }

bool3 bool4_swizzle_4_to_3_zxw_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_zxw_t::operator bool3() const { return bool3( v[2], v[0], v[3] ); }
bool4_swizzle_4_to_3_wxw_t::operator bool3() const { return bool3( v[3], v[0], v[3] ); }

bool3 bool4_swizzle_4_to_3_xyw_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_xyw_t::operator bool3() const { return bool3( v[0], v[1], v[3] ); }
bool4_swizzle_4_to_3_yyw_t::operator bool3() const { return bool3( v[1], v[1], v[3] ); }

bool3 bool4_swizzle_4_to_3_zyw_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_zyw_t::operator bool3() const { return bool3( v[2], v[1], v[3] ); }
bool4_swizzle_4_to_3_wyw_t::operator bool3() const { return bool3( v[3], v[1], v[3] ); }

bool3 bool4_swizzle_4_to_3_xzw_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_xzw_t::operator bool3() const { return bool3( v[0], v[2], v[3] ); }

bool3 bool4_swizzle_4_to_3_yzw_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_yzw_t::operator bool3() const { return bool3( v[1], v[2], v[3] ); }
bool4_swizzle_4_to_3_zzw_t::operator bool3() const { return bool3( v[2], v[2], v[3] ); }
bool4_swizzle_4_to_3_wzw_t::operator bool3() const { return bool3( v[3], v[2], v[3] ); }
bool4_swizzle_4_to_3_xww_t::operator bool3() const { return bool3( v[0], v[3], v[3] ); }
bool4_swizzle_4_to_3_yww_t::operator bool3() const { return bool3( v[1], v[3], v[3] ); }
bool4_swizzle_4_to_3_zww_t::operator bool3() const { return bool3( v[2], v[3], v[3] ); }
bool4_swizzle_4_to_3_www_t::operator bool3() const { return bool3( v[3], v[3], v[3] ); }
bool4_swizzle_4_to_4_xxxx_t::operator bool4() const { return bool4( v[0], v[0], v[0], v[0] ); }
bool4_swizzle_4_to_4_yxxx_t::operator bool4() const { return bool4( v[1], v[0], v[0], v[0] ); }
bool4_swizzle_4_to_4_zxxx_t::operator bool4() const { return bool4( v[2], v[0], v[0], v[0] ); }
bool4_swizzle_4_to_4_wxxx_t::operator bool4() const { return bool4( v[3], v[0], v[0], v[0] ); }
bool4_swizzle_4_to_4_xyxx_t::operator bool4() const { return bool4( v[0], v[1], v[0], v[0] ); }
bool4_swizzle_4_to_4_yyxx_t::operator bool4() const { return bool4( v[1], v[1], v[0], v[0] ); }
bool4_swizzle_4_to_4_zyxx_t::operator bool4() const { return bool4( v[2], v[1], v[0], v[0] ); }
bool4_swizzle_4_to_4_wyxx_t::operator bool4() const { return bool4( v[3], v[1], v[0], v[0] ); }
bool4_swizzle_4_to_4_xzxx_t::operator bool4() const { return bool4( v[0], v[2], v[0], v[0] ); }
bool4_swizzle_4_to_4_yzxx_t::operator bool4() const { return bool4( v[1], v[2], v[0], v[0] ); }
bool4_swizzle_4_to_4_zzxx_t::operator bool4() const { return bool4( v[2], v[2], v[0], v[0] ); }
bool4_swizzle_4_to_4_wzxx_t::operator bool4() const { return bool4( v[3], v[2], v[0], v[0] ); }
bool4_swizzle_4_to_4_xwxx_t::operator bool4() const { return bool4( v[0], v[3], v[0], v[0] ); }
bool4_swizzle_4_to_4_ywxx_t::operator bool4() const { return bool4( v[1], v[3], v[0], v[0] ); }
bool4_swizzle_4_to_4_zwxx_t::operator bool4() const { return bool4( v[2], v[3], v[0], v[0] ); }
bool4_swizzle_4_to_4_wwxx_t::operator bool4() const { return bool4( v[3], v[3], v[0], v[0] ); }
bool4_swizzle_4_to_4_xxyx_t::operator bool4() const { return bool4( v[0], v[0], v[1], v[0] ); }
bool4_swizzle_4_to_4_yxyx_t::operator bool4() const { return bool4( v[1], v[0], v[1], v[0] ); }
bool4_swizzle_4_to_4_zxyx_t::operator bool4() const { return bool4( v[2], v[0], v[1], v[0] ); }
bool4_swizzle_4_to_4_wxyx_t::operator bool4() const { return bool4( v[3], v[0], v[1], v[0] ); }
bool4_swizzle_4_to_4_xyyx_t::operator bool4() const { return bool4( v[0], v[1], v[1], v[0] ); }
bool4_swizzle_4_to_4_yyyx_t::operator bool4() const { return bool4( v[1], v[1], v[1], v[0] ); }
bool4_swizzle_4_to_4_zyyx_t::operator bool4() const { return bool4( v[2], v[1], v[1], v[0] ); }
bool4_swizzle_4_to_4_wyyx_t::operator bool4() const { return bool4( v[3], v[1], v[1], v[0] ); }
bool4_swizzle_4_to_4_xzyx_t::operator bool4() const { return bool4( v[0], v[2], v[1], v[0] ); }
bool4_swizzle_4_to_4_yzyx_t::operator bool4() const { return bool4( v[1], v[2], v[1], v[0] ); }
bool4_swizzle_4_to_4_zzyx_t::operator bool4() const { return bool4( v[2], v[2], v[1], v[0] ); }

bool4 bool4_swizzle_4_to_4_wzyx_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_wzyx_t::operator bool4() const { return bool4( v[3], v[2], v[1], v[0] ); }
bool4_swizzle_4_to_4_xwyx_t::operator bool4() const { return bool4( v[0], v[3], v[1], v[0] ); }
bool4_swizzle_4_to_4_ywyx_t::operator bool4() const { return bool4( v[1], v[3], v[1], v[0] ); }

bool4 bool4_swizzle_4_to_4_zwyx_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_zwyx_t::operator bool4() const { return bool4( v[2], v[3], v[1], v[0] ); }
bool4_swizzle_4_to_4_wwyx_t::operator bool4() const { return bool4( v[3], v[3], v[1], v[0] ); }
bool4_swizzle_4_to_4_xxzx_t::operator bool4() const { return bool4( v[0], v[0], v[2], v[0] ); }
bool4_swizzle_4_to_4_yxzx_t::operator bool4() const { return bool4( v[1], v[0], v[2], v[0] ); }
bool4_swizzle_4_to_4_zxzx_t::operator bool4() const { return bool4( v[2], v[0], v[2], v[0] ); }
bool4_swizzle_4_to_4_wxzx_t::operator bool4() const { return bool4( v[3], v[0], v[2], v[0] ); }
bool4_swizzle_4_to_4_xyzx_t::operator bool4() const { return bool4( v[0], v[1], v[2], v[0] ); }
bool4_swizzle_4_to_4_yyzx_t::operator bool4() const { return bool4( v[1], v[1], v[2], v[0] ); }
bool4_swizzle_4_to_4_zyzx_t::operator bool4() const { return bool4( v[2], v[1], v[2], v[0] ); }

bool4 bool4_swizzle_4_to_4_wyzx_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_wyzx_t::operator bool4() const { return bool4( v[3], v[1], v[2], v[0] ); }
bool4_swizzle_4_to_4_xzzx_t::operator bool4() const { return bool4( v[0], v[2], v[2], v[0] ); }
bool4_swizzle_4_to_4_yzzx_t::operator bool4() const { return bool4( v[1], v[2], v[2], v[0] ); }
bool4_swizzle_4_to_4_zzzx_t::operator bool4() const { return bool4( v[2], v[2], v[2], v[0] ); }
bool4_swizzle_4_to_4_wzzx_t::operator bool4() const { return bool4( v[3], v[2], v[2], v[0] ); }
bool4_swizzle_4_to_4_xwzx_t::operator bool4() const { return bool4( v[0], v[3], v[2], v[0] ); }

bool4 bool4_swizzle_4_to_4_ywzx_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_ywzx_t::operator bool4() const { return bool4( v[1], v[3], v[2], v[0] ); }
bool4_swizzle_4_to_4_zwzx_t::operator bool4() const { return bool4( v[2], v[3], v[2], v[0] ); }
bool4_swizzle_4_to_4_wwzx_t::operator bool4() const { return bool4( v[3], v[3], v[2], v[0] ); }
bool4_swizzle_4_to_4_xxwx_t::operator bool4() const { return bool4( v[0], v[0], v[3], v[0] ); }
bool4_swizzle_4_to_4_yxwx_t::operator bool4() const { return bool4( v[1], v[0], v[3], v[0] ); }
bool4_swizzle_4_to_4_zxwx_t::operator bool4() const { return bool4( v[2], v[0], v[3], v[0] ); }
bool4_swizzle_4_to_4_wxwx_t::operator bool4() const { return bool4( v[3], v[0], v[3], v[0] ); }
bool4_swizzle_4_to_4_xywx_t::operator bool4() const { return bool4( v[0], v[1], v[3], v[0] ); }
bool4_swizzle_4_to_4_yywx_t::operator bool4() const { return bool4( v[1], v[1], v[3], v[0] ); }

bool4 bool4_swizzle_4_to_4_zywx_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_zywx_t::operator bool4() const { return bool4( v[2], v[1], v[3], v[0] ); }
bool4_swizzle_4_to_4_wywx_t::operator bool4() const { return bool4( v[3], v[1], v[3], v[0] ); }
bool4_swizzle_4_to_4_xzwx_t::operator bool4() const { return bool4( v[0], v[2], v[3], v[0] ); }

bool4 bool4_swizzle_4_to_4_yzwx_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_yzwx_t::operator bool4() const { return bool4( v[1], v[2], v[3], v[0] ); }
bool4_swizzle_4_to_4_zzwx_t::operator bool4() const { return bool4( v[2], v[2], v[3], v[0] ); }
bool4_swizzle_4_to_4_wzwx_t::operator bool4() const { return bool4( v[3], v[2], v[3], v[0] ); }
bool4_swizzle_4_to_4_xwwx_t::operator bool4() const { return bool4( v[0], v[3], v[3], v[0] ); }
bool4_swizzle_4_to_4_ywwx_t::operator bool4() const { return bool4( v[1], v[3], v[3], v[0] ); }
bool4_swizzle_4_to_4_zwwx_t::operator bool4() const { return bool4( v[2], v[3], v[3], v[0] ); }
bool4_swizzle_4_to_4_wwwx_t::operator bool4() const { return bool4( v[3], v[3], v[3], v[0] ); }
bool4_swizzle_4_to_4_xxxy_t::operator bool4() const { return bool4( v[0], v[0], v[0], v[1] ); }
bool4_swizzle_4_to_4_yxxy_t::operator bool4() const { return bool4( v[1], v[0], v[0], v[1] ); }
bool4_swizzle_4_to_4_zxxy_t::operator bool4() const { return bool4( v[2], v[0], v[0], v[1] ); }
bool4_swizzle_4_to_4_wxxy_t::operator bool4() const { return bool4( v[3], v[0], v[0], v[1] ); }
bool4_swizzle_4_to_4_xyxy_t::operator bool4() const { return bool4( v[0], v[1], v[0], v[1] ); }
bool4_swizzle_4_to_4_yyxy_t::operator bool4() const { return bool4( v[1], v[1], v[0], v[1] ); }
bool4_swizzle_4_to_4_zyxy_t::operator bool4() const { return bool4( v[2], v[1], v[0], v[1] ); }
bool4_swizzle_4_to_4_wyxy_t::operator bool4() const { return bool4( v[3], v[1], v[0], v[1] ); }
bool4_swizzle_4_to_4_xzxy_t::operator bool4() const { return bool4( v[0], v[2], v[0], v[1] ); }
bool4_swizzle_4_to_4_yzxy_t::operator bool4() const { return bool4( v[1], v[2], v[0], v[1] ); }
bool4_swizzle_4_to_4_zzxy_t::operator bool4() const { return bool4( v[2], v[2], v[0], v[1] ); }

bool4 bool4_swizzle_4_to_4_wzxy_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_wzxy_t::operator bool4() const { return bool4( v[3], v[2], v[0], v[1] ); }
bool4_swizzle_4_to_4_xwxy_t::operator bool4() const { return bool4( v[0], v[3], v[0], v[1] ); }
bool4_swizzle_4_to_4_ywxy_t::operator bool4() const { return bool4( v[1], v[3], v[0], v[1] ); }

bool4 bool4_swizzle_4_to_4_zwxy_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_zwxy_t::operator bool4() const { return bool4( v[2], v[3], v[0], v[1] ); }
bool4_swizzle_4_to_4_wwxy_t::operator bool4() const { return bool4( v[3], v[3], v[0], v[1] ); }
bool4_swizzle_4_to_4_xxyy_t::operator bool4() const { return bool4( v[0], v[0], v[1], v[1] ); }
bool4_swizzle_4_to_4_yxyy_t::operator bool4() const { return bool4( v[1], v[0], v[1], v[1] ); }
bool4_swizzle_4_to_4_zxyy_t::operator bool4() const { return bool4( v[2], v[0], v[1], v[1] ); }
bool4_swizzle_4_to_4_wxyy_t::operator bool4() const { return bool4( v[3], v[0], v[1], v[1] ); }
bool4_swizzle_4_to_4_xyyy_t::operator bool4() const { return bool4( v[0], v[1], v[1], v[1] ); }
bool4_swizzle_4_to_4_yyyy_t::operator bool4() const { return bool4( v[1], v[1], v[1], v[1] ); }
bool4_swizzle_4_to_4_zyyy_t::operator bool4() const { return bool4( v[2], v[1], v[1], v[1] ); }
bool4_swizzle_4_to_4_wyyy_t::operator bool4() const { return bool4( v[3], v[1], v[1], v[1] ); }
bool4_swizzle_4_to_4_xzyy_t::operator bool4() const { return bool4( v[0], v[2], v[1], v[1] ); }
bool4_swizzle_4_to_4_yzyy_t::operator bool4() const { return bool4( v[1], v[2], v[1], v[1] ); }
bool4_swizzle_4_to_4_zzyy_t::operator bool4() const { return bool4( v[2], v[2], v[1], v[1] ); }
bool4_swizzle_4_to_4_wzyy_t::operator bool4() const { return bool4( v[3], v[2], v[1], v[1] ); }
bool4_swizzle_4_to_4_xwyy_t::operator bool4() const { return bool4( v[0], v[3], v[1], v[1] ); }
bool4_swizzle_4_to_4_ywyy_t::operator bool4() const { return bool4( v[1], v[3], v[1], v[1] ); }
bool4_swizzle_4_to_4_zwyy_t::operator bool4() const { return bool4( v[2], v[3], v[1], v[1] ); }
bool4_swizzle_4_to_4_wwyy_t::operator bool4() const { return bool4( v[3], v[3], v[1], v[1] ); }
bool4_swizzle_4_to_4_xxzy_t::operator bool4() const { return bool4( v[0], v[0], v[2], v[1] ); }
bool4_swizzle_4_to_4_yxzy_t::operator bool4() const { return bool4( v[1], v[0], v[2], v[1] ); }
bool4_swizzle_4_to_4_zxzy_t::operator bool4() const { return bool4( v[2], v[0], v[2], v[1] ); }

bool4 bool4_swizzle_4_to_4_wxzy_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_wxzy_t::operator bool4() const { return bool4( v[3], v[0], v[2], v[1] ); }
bool4_swizzle_4_to_4_xyzy_t::operator bool4() const { return bool4( v[0], v[1], v[2], v[1] ); }
bool4_swizzle_4_to_4_yyzy_t::operator bool4() const { return bool4( v[1], v[1], v[2], v[1] ); }
bool4_swizzle_4_to_4_zyzy_t::operator bool4() const { return bool4( v[2], v[1], v[2], v[1] ); }
bool4_swizzle_4_to_4_wyzy_t::operator bool4() const { return bool4( v[3], v[1], v[2], v[1] ); }
bool4_swizzle_4_to_4_xzzy_t::operator bool4() const { return bool4( v[0], v[2], v[2], v[1] ); }
bool4_swizzle_4_to_4_yzzy_t::operator bool4() const { return bool4( v[1], v[2], v[2], v[1] ); }
bool4_swizzle_4_to_4_zzzy_t::operator bool4() const { return bool4( v[2], v[2], v[2], v[1] ); }
bool4_swizzle_4_to_4_wzzy_t::operator bool4() const { return bool4( v[3], v[2], v[2], v[1] ); }

bool4 bool4_swizzle_4_to_4_xwzy_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_xwzy_t::operator bool4() const { return bool4( v[0], v[3], v[2], v[1] ); }
bool4_swizzle_4_to_4_ywzy_t::operator bool4() const { return bool4( v[1], v[3], v[2], v[1] ); }
bool4_swizzle_4_to_4_zwzy_t::operator bool4() const { return bool4( v[2], v[3], v[2], v[1] ); }
bool4_swizzle_4_to_4_wwzy_t::operator bool4() const { return bool4( v[3], v[3], v[2], v[1] ); }
bool4_swizzle_4_to_4_xxwy_t::operator bool4() const { return bool4( v[0], v[0], v[3], v[1] ); }
bool4_swizzle_4_to_4_yxwy_t::operator bool4() const { return bool4( v[1], v[0], v[3], v[1] ); }

bool4 bool4_swizzle_4_to_4_zxwy_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_zxwy_t::operator bool4() const { return bool4( v[2], v[0], v[3], v[1] ); }
bool4_swizzle_4_to_4_wxwy_t::operator bool4() const { return bool4( v[3], v[0], v[3], v[1] ); }
bool4_swizzle_4_to_4_xywy_t::operator bool4() const { return bool4( v[0], v[1], v[3], v[1] ); }
bool4_swizzle_4_to_4_yywy_t::operator bool4() const { return bool4( v[1], v[1], v[3], v[1] ); }
bool4_swizzle_4_to_4_zywy_t::operator bool4() const { return bool4( v[2], v[1], v[3], v[1] ); }
bool4_swizzle_4_to_4_wywy_t::operator bool4() const { return bool4( v[3], v[1], v[3], v[1] ); }

bool4 bool4_swizzle_4_to_4_xzwy_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_xzwy_t::operator bool4() const { return bool4( v[0], v[2], v[3], v[1] ); }
bool4_swizzle_4_to_4_yzwy_t::operator bool4() const { return bool4( v[1], v[2], v[3], v[1] ); }
bool4_swizzle_4_to_4_zzwy_t::operator bool4() const { return bool4( v[2], v[2], v[3], v[1] ); }
bool4_swizzle_4_to_4_wzwy_t::operator bool4() const { return bool4( v[3], v[2], v[3], v[1] ); }
bool4_swizzle_4_to_4_xwwy_t::operator bool4() const { return bool4( v[0], v[3], v[3], v[1] ); }
bool4_swizzle_4_to_4_ywwy_t::operator bool4() const { return bool4( v[1], v[3], v[3], v[1] ); }
bool4_swizzle_4_to_4_zwwy_t::operator bool4() const { return bool4( v[2], v[3], v[3], v[1] ); }
bool4_swizzle_4_to_4_wwwy_t::operator bool4() const { return bool4( v[3], v[3], v[3], v[1] ); }
bool4_swizzle_4_to_4_xxxz_t::operator bool4() const { return bool4( v[0], v[0], v[0], v[2] ); }
bool4_swizzle_4_to_4_yxxz_t::operator bool4() const { return bool4( v[1], v[0], v[0], v[2] ); }
bool4_swizzle_4_to_4_zxxz_t::operator bool4() const { return bool4( v[2], v[0], v[0], v[2] ); }
bool4_swizzle_4_to_4_wxxz_t::operator bool4() const { return bool4( v[3], v[0], v[0], v[2] ); }
bool4_swizzle_4_to_4_xyxz_t::operator bool4() const { return bool4( v[0], v[1], v[0], v[2] ); }
bool4_swizzle_4_to_4_yyxz_t::operator bool4() const { return bool4( v[1], v[1], v[0], v[2] ); }
bool4_swizzle_4_to_4_zyxz_t::operator bool4() const { return bool4( v[2], v[1], v[0], v[2] ); }

bool4 bool4_swizzle_4_to_4_wyxz_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_wyxz_t::operator bool4() const { return bool4( v[3], v[1], v[0], v[2] ); }
bool4_swizzle_4_to_4_xzxz_t::operator bool4() const { return bool4( v[0], v[2], v[0], v[2] ); }
bool4_swizzle_4_to_4_yzxz_t::operator bool4() const { return bool4( v[1], v[2], v[0], v[2] ); }
bool4_swizzle_4_to_4_zzxz_t::operator bool4() const { return bool4( v[2], v[2], v[0], v[2] ); }
bool4_swizzle_4_to_4_wzxz_t::operator bool4() const { return bool4( v[3], v[2], v[0], v[2] ); }
bool4_swizzle_4_to_4_xwxz_t::operator bool4() const { return bool4( v[0], v[3], v[0], v[2] ); }

bool4 bool4_swizzle_4_to_4_ywxz_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_ywxz_t::operator bool4() const { return bool4( v[1], v[3], v[0], v[2] ); }
bool4_swizzle_4_to_4_zwxz_t::operator bool4() const { return bool4( v[2], v[3], v[0], v[2] ); }
bool4_swizzle_4_to_4_wwxz_t::operator bool4() const { return bool4( v[3], v[3], v[0], v[2] ); }
bool4_swizzle_4_to_4_xxyz_t::operator bool4() const { return bool4( v[0], v[0], v[1], v[2] ); }
bool4_swizzle_4_to_4_yxyz_t::operator bool4() const { return bool4( v[1], v[0], v[1], v[2] ); }
bool4_swizzle_4_to_4_zxyz_t::operator bool4() const { return bool4( v[2], v[0], v[1], v[2] ); }

bool4 bool4_swizzle_4_to_4_wxyz_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_wxyz_t::operator bool4() const { return bool4( v[3], v[0], v[1], v[2] ); }
bool4_swizzle_4_to_4_xyyz_t::operator bool4() const { return bool4( v[0], v[1], v[1], v[2] ); }
bool4_swizzle_4_to_4_yyyz_t::operator bool4() const { return bool4( v[1], v[1], v[1], v[2] ); }
bool4_swizzle_4_to_4_zyyz_t::operator bool4() const { return bool4( v[2], v[1], v[1], v[2] ); }
bool4_swizzle_4_to_4_wyyz_t::operator bool4() const { return bool4( v[3], v[1], v[1], v[2] ); }
bool4_swizzle_4_to_4_xzyz_t::operator bool4() const { return bool4( v[0], v[2], v[1], v[2] ); }
bool4_swizzle_4_to_4_yzyz_t::operator bool4() const { return bool4( v[1], v[2], v[1], v[2] ); }
bool4_swizzle_4_to_4_zzyz_t::operator bool4() const { return bool4( v[2], v[2], v[1], v[2] ); }
bool4_swizzle_4_to_4_wzyz_t::operator bool4() const { return bool4( v[3], v[2], v[1], v[2] ); }

bool4 bool4_swizzle_4_to_4_xwyz_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_xwyz_t::operator bool4() const { return bool4( v[0], v[3], v[1], v[2] ); }
bool4_swizzle_4_to_4_ywyz_t::operator bool4() const { return bool4( v[1], v[3], v[1], v[2] ); }
bool4_swizzle_4_to_4_zwyz_t::operator bool4() const { return bool4( v[2], v[3], v[1], v[2] ); }
bool4_swizzle_4_to_4_wwyz_t::operator bool4() const { return bool4( v[3], v[3], v[1], v[2] ); }
bool4_swizzle_4_to_4_xxzz_t::operator bool4() const { return bool4( v[0], v[0], v[2], v[2] ); }
bool4_swizzle_4_to_4_yxzz_t::operator bool4() const { return bool4( v[1], v[0], v[2], v[2] ); }
bool4_swizzle_4_to_4_zxzz_t::operator bool4() const { return bool4( v[2], v[0], v[2], v[2] ); }
bool4_swizzle_4_to_4_wxzz_t::operator bool4() const { return bool4( v[3], v[0], v[2], v[2] ); }
bool4_swizzle_4_to_4_xyzz_t::operator bool4() const { return bool4( v[0], v[1], v[2], v[2] ); }
bool4_swizzle_4_to_4_yyzz_t::operator bool4() const { return bool4( v[1], v[1], v[2], v[2] ); }
bool4_swizzle_4_to_4_zyzz_t::operator bool4() const { return bool4( v[2], v[1], v[2], v[2] ); }
bool4_swizzle_4_to_4_wyzz_t::operator bool4() const { return bool4( v[3], v[1], v[2], v[2] ); }
bool4_swizzle_4_to_4_xzzz_t::operator bool4() const { return bool4( v[0], v[2], v[2], v[2] ); }
bool4_swizzle_4_to_4_yzzz_t::operator bool4() const { return bool4( v[1], v[2], v[2], v[2] ); }
bool4_swizzle_4_to_4_zzzz_t::operator bool4() const { return bool4( v[2], v[2], v[2], v[2] ); }
bool4_swizzle_4_to_4_wzzz_t::operator bool4() const { return bool4( v[3], v[2], v[2], v[2] ); }
bool4_swizzle_4_to_4_xwzz_t::operator bool4() const { return bool4( v[0], v[3], v[2], v[2] ); }
bool4_swizzle_4_to_4_ywzz_t::operator bool4() const { return bool4( v[1], v[3], v[2], v[2] ); }
bool4_swizzle_4_to_4_zwzz_t::operator bool4() const { return bool4( v[2], v[3], v[2], v[2] ); }
bool4_swizzle_4_to_4_wwzz_t::operator bool4() const { return bool4( v[3], v[3], v[2], v[2] ); }
bool4_swizzle_4_to_4_xxwz_t::operator bool4() const { return bool4( v[0], v[0], v[3], v[2] ); }

bool4 bool4_swizzle_4_to_4_yxwz_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_yxwz_t::operator bool4() const { return bool4( v[1], v[0], v[3], v[2] ); }
bool4_swizzle_4_to_4_zxwz_t::operator bool4() const { return bool4( v[2], v[0], v[3], v[2] ); }
bool4_swizzle_4_to_4_wxwz_t::operator bool4() const { return bool4( v[3], v[0], v[3], v[2] ); }

bool4 bool4_swizzle_4_to_4_xywz_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_xywz_t::operator bool4() const { return bool4( v[0], v[1], v[3], v[2] ); }
bool4_swizzle_4_to_4_yywz_t::operator bool4() const { return bool4( v[1], v[1], v[3], v[2] ); }
bool4_swizzle_4_to_4_zywz_t::operator bool4() const { return bool4( v[2], v[1], v[3], v[2] ); }
bool4_swizzle_4_to_4_wywz_t::operator bool4() const { return bool4( v[3], v[1], v[3], v[2] ); }
bool4_swizzle_4_to_4_xzwz_t::operator bool4() const { return bool4( v[0], v[2], v[3], v[2] ); }
bool4_swizzle_4_to_4_yzwz_t::operator bool4() const { return bool4( v[1], v[2], v[3], v[2] ); }
bool4_swizzle_4_to_4_zzwz_t::operator bool4() const { return bool4( v[2], v[2], v[3], v[2] ); }
bool4_swizzle_4_to_4_wzwz_t::operator bool4() const { return bool4( v[3], v[2], v[3], v[2] ); }
bool4_swizzle_4_to_4_xwwz_t::operator bool4() const { return bool4( v[0], v[3], v[3], v[2] ); }
bool4_swizzle_4_to_4_ywwz_t::operator bool4() const { return bool4( v[1], v[3], v[3], v[2] ); }
bool4_swizzle_4_to_4_zwwz_t::operator bool4() const { return bool4( v[2], v[3], v[3], v[2] ); }
bool4_swizzle_4_to_4_wwwz_t::operator bool4() const { return bool4( v[3], v[3], v[3], v[2] ); }
bool4_swizzle_4_to_4_xxxw_t::operator bool4() const { return bool4( v[0], v[0], v[0], v[3] ); }
bool4_swizzle_4_to_4_yxxw_t::operator bool4() const { return bool4( v[1], v[0], v[0], v[3] ); }
bool4_swizzle_4_to_4_zxxw_t::operator bool4() const { return bool4( v[2], v[0], v[0], v[3] ); }
bool4_swizzle_4_to_4_wxxw_t::operator bool4() const { return bool4( v[3], v[0], v[0], v[3] ); }
bool4_swizzle_4_to_4_xyxw_t::operator bool4() const { return bool4( v[0], v[1], v[0], v[3] ); }
bool4_swizzle_4_to_4_yyxw_t::operator bool4() const { return bool4( v[1], v[1], v[0], v[3] ); }

bool4 bool4_swizzle_4_to_4_zyxw_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_zyxw_t::operator bool4() const { return bool4( v[2], v[1], v[0], v[3] ); }
bool4_swizzle_4_to_4_wyxw_t::operator bool4() const { return bool4( v[3], v[1], v[0], v[3] ); }
bool4_swizzle_4_to_4_xzxw_t::operator bool4() const { return bool4( v[0], v[2], v[0], v[3] ); }

bool4 bool4_swizzle_4_to_4_yzxw_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_yzxw_t::operator bool4() const { return bool4( v[1], v[2], v[0], v[3] ); }
bool4_swizzle_4_to_4_zzxw_t::operator bool4() const { return bool4( v[2], v[2], v[0], v[3] ); }
bool4_swizzle_4_to_4_wzxw_t::operator bool4() const { return bool4( v[3], v[2], v[0], v[3] ); }
bool4_swizzle_4_to_4_xwxw_t::operator bool4() const { return bool4( v[0], v[3], v[0], v[3] ); }
bool4_swizzle_4_to_4_ywxw_t::operator bool4() const { return bool4( v[1], v[3], v[0], v[3] ); }
bool4_swizzle_4_to_4_zwxw_t::operator bool4() const { return bool4( v[2], v[3], v[0], v[3] ); }
bool4_swizzle_4_to_4_wwxw_t::operator bool4() const { return bool4( v[3], v[3], v[0], v[3] ); }
bool4_swizzle_4_to_4_xxyw_t::operator bool4() const { return bool4( v[0], v[0], v[1], v[3] ); }
bool4_swizzle_4_to_4_yxyw_t::operator bool4() const { return bool4( v[1], v[0], v[1], v[3] ); }

bool4 bool4_swizzle_4_to_4_zxyw_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_zxyw_t::operator bool4() const { return bool4( v[2], v[0], v[1], v[3] ); }
bool4_swizzle_4_to_4_wxyw_t::operator bool4() const { return bool4( v[3], v[0], v[1], v[3] ); }
bool4_swizzle_4_to_4_xyyw_t::operator bool4() const { return bool4( v[0], v[1], v[1], v[3] ); }
bool4_swizzle_4_to_4_yyyw_t::operator bool4() const { return bool4( v[1], v[1], v[1], v[3] ); }
bool4_swizzle_4_to_4_zyyw_t::operator bool4() const { return bool4( v[2], v[1], v[1], v[3] ); }
bool4_swizzle_4_to_4_wyyw_t::operator bool4() const { return bool4( v[3], v[1], v[1], v[3] ); }

bool4 bool4_swizzle_4_to_4_xzyw_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_xzyw_t::operator bool4() const { return bool4( v[0], v[2], v[1], v[3] ); }
bool4_swizzle_4_to_4_yzyw_t::operator bool4() const { return bool4( v[1], v[2], v[1], v[3] ); }
bool4_swizzle_4_to_4_zzyw_t::operator bool4() const { return bool4( v[2], v[2], v[1], v[3] ); }
bool4_swizzle_4_to_4_wzyw_t::operator bool4() const { return bool4( v[3], v[2], v[1], v[3] ); }
bool4_swizzle_4_to_4_xwyw_t::operator bool4() const { return bool4( v[0], v[3], v[1], v[3] ); }
bool4_swizzle_4_to_4_ywyw_t::operator bool4() const { return bool4( v[1], v[3], v[1], v[3] ); }
bool4_swizzle_4_to_4_zwyw_t::operator bool4() const { return bool4( v[2], v[3], v[1], v[3] ); }
bool4_swizzle_4_to_4_wwyw_t::operator bool4() const { return bool4( v[3], v[3], v[1], v[3] ); }
bool4_swizzle_4_to_4_xxzw_t::operator bool4() const { return bool4( v[0], v[0], v[2], v[3] ); }

bool4 bool4_swizzle_4_to_4_yxzw_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_yxzw_t::operator bool4() const { return bool4( v[1], v[0], v[2], v[3] ); }
bool4_swizzle_4_to_4_zxzw_t::operator bool4() const { return bool4( v[2], v[0], v[2], v[3] ); }
bool4_swizzle_4_to_4_wxzw_t::operator bool4() const { return bool4( v[3], v[0], v[2], v[3] ); }

bool4 bool4_swizzle_4_to_4_xyzw_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_xyzw_t::operator bool4() const { return bool4( v[0], v[1], v[2], v[3] ); }
bool4_swizzle_4_to_4_yyzw_t::operator bool4() const { return bool4( v[1], v[1], v[2], v[3] ); }
bool4_swizzle_4_to_4_zyzw_t::operator bool4() const { return bool4( v[2], v[1], v[2], v[3] ); }
bool4_swizzle_4_to_4_wyzw_t::operator bool4() const { return bool4( v[3], v[1], v[2], v[3] ); }
bool4_swizzle_4_to_4_xzzw_t::operator bool4() const { return bool4( v[0], v[2], v[2], v[3] ); }
bool4_swizzle_4_to_4_yzzw_t::operator bool4() const { return bool4( v[1], v[2], v[2], v[3] ); }
bool4_swizzle_4_to_4_zzzw_t::operator bool4() const { return bool4( v[2], v[2], v[2], v[3] ); }
bool4_swizzle_4_to_4_wzzw_t::operator bool4() const { return bool4( v[3], v[2], v[2], v[3] ); }
bool4_swizzle_4_to_4_xwzw_t::operator bool4() const { return bool4( v[0], v[3], v[2], v[3] ); }
bool4_swizzle_4_to_4_ywzw_t::operator bool4() const { return bool4( v[1], v[3], v[2], v[3] ); }
bool4_swizzle_4_to_4_zwzw_t::operator bool4() const { return bool4( v[2], v[3], v[2], v[3] ); }
bool4_swizzle_4_to_4_wwzw_t::operator bool4() const { return bool4( v[3], v[3], v[2], v[3] ); }
bool4_swizzle_4_to_4_xxww_t::operator bool4() const { return bool4( v[0], v[0], v[3], v[3] ); }
bool4_swizzle_4_to_4_yxww_t::operator bool4() const { return bool4( v[1], v[0], v[3], v[3] ); }
bool4_swizzle_4_to_4_zxww_t::operator bool4() const { return bool4( v[2], v[0], v[3], v[3] ); }
bool4_swizzle_4_to_4_wxww_t::operator bool4() const { return bool4( v[3], v[0], v[3], v[3] ); }
bool4_swizzle_4_to_4_xyww_t::operator bool4() const { return bool4( v[0], v[1], v[3], v[3] ); }
bool4_swizzle_4_to_4_yyww_t::operator bool4() const { return bool4( v[1], v[1], v[3], v[3] ); }
bool4_swizzle_4_to_4_zyww_t::operator bool4() const { return bool4( v[2], v[1], v[3], v[3] ); }
bool4_swizzle_4_to_4_wyww_t::operator bool4() const { return bool4( v[3], v[1], v[3], v[3] ); }
bool4_swizzle_4_to_4_xzww_t::operator bool4() const { return bool4( v[0], v[2], v[3], v[3] ); }
bool4_swizzle_4_to_4_yzww_t::operator bool4() const { return bool4( v[1], v[2], v[3], v[3] ); }
bool4_swizzle_4_to_4_zzww_t::operator bool4() const { return bool4( v[2], v[2], v[3], v[3] ); }
bool4_swizzle_4_to_4_wzww_t::operator bool4() const { return bool4( v[3], v[2], v[3], v[3] ); }
bool4_swizzle_4_to_4_xwww_t::operator bool4() const { return bool4( v[0], v[3], v[3], v[3] ); }
bool4_swizzle_4_to_4_ywww_t::operator bool4() const { return bool4( v[1], v[3], v[3], v[3] ); }
bool4_swizzle_4_to_4_zwww_t::operator bool4() const { return bool4( v[2], v[3], v[3], v[3] ); }
bool4_swizzle_4_to_4_wwww_t::operator bool4() const { return bool4( v[3], v[3], v[3], v[3] ); }

// rgba swizzles
bool4_swizzle_4_to_2_rr_t::operator bool2() const { return bool2( v[0], v[0] ); }

bool2 bool4_swizzle_4_to_2_gr_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_gr_t::operator bool2() const { return bool2( v[1], v[0] ); }

bool2 bool4_swizzle_4_to_2_br_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_br_t::operator bool2() const { return bool2( v[2], v[0] ); }

bool2 bool4_swizzle_4_to_2_ar_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_ar_t::operator bool2() const { return bool2( v[3], v[0] ); }

bool2 bool4_swizzle_4_to_2_rg_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_rg_t::operator bool2() const { return bool2( v[0], v[1] ); }
bool4_swizzle_4_to_2_gg_t::operator bool2() const { return bool2( v[1], v[1] ); }

bool2 bool4_swizzle_4_to_2_bg_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_bg_t::operator bool2() const { return bool2( v[2], v[1] ); }

bool2 bool4_swizzle_4_to_2_ag_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_ag_t::operator bool2() const { return bool2( v[3], v[1] ); }

bool2 bool4_swizzle_4_to_2_rb_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_rb_t::operator bool2() const { return bool2( v[0], v[2] ); }

bool2 bool4_swizzle_4_to_2_gb_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_gb_t::operator bool2() const { return bool2( v[1], v[2] ); }
bool4_swizzle_4_to_2_bb_t::operator bool2() const { return bool2( v[2], v[2] ); }

bool2 bool4_swizzle_4_to_2_ab_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_ab_t::operator bool2() const { return bool2( v[3], v[2] ); }

bool2 bool4_swizzle_4_to_2_ra_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_ra_t::operator bool2() const { return bool2( v[0], v[3] ); }

bool2 bool4_swizzle_4_to_2_ga_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_ga_t::operator bool2() const { return bool2( v[1], v[3] ); }

bool2 bool4_swizzle_4_to_2_ba_t::operator=( const bool2& vec )
{
	return bool2(
		v[0] = vec.x,
		v[1] = vec.y
	);
}

bool4_swizzle_4_to_2_ba_t::operator bool2() const { return bool2( v[2], v[3] ); }
bool4_swizzle_4_to_2_aa_t::operator bool2() const { return bool2( v[3], v[3] ); }
bool4_swizzle_4_to_3_rrr_t::operator bool3() const { return bool3( v[0], v[0], v[0] ); }
bool4_swizzle_4_to_3_grr_t::operator bool3() const { return bool3( v[1], v[0], v[0] ); }
bool4_swizzle_4_to_3_brr_t::operator bool3() const { return bool3( v[2], v[0], v[0] ); }
bool4_swizzle_4_to_3_arr_t::operator bool3() const { return bool3( v[3], v[0], v[0] ); }
bool4_swizzle_4_to_3_rgr_t::operator bool3() const { return bool3( v[0], v[1], v[0] ); }
bool4_swizzle_4_to_3_ggr_t::operator bool3() const { return bool3( v[1], v[1], v[0] ); }

bool3 bool4_swizzle_4_to_3_bgr_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_bgr_t::operator bool3() const { return bool3( v[2], v[1], v[0] ); }

bool3 bool4_swizzle_4_to_3_agr_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_agr_t::operator bool3() const { return bool3( v[3], v[1], v[0] ); }
bool4_swizzle_4_to_3_rbr_t::operator bool3() const { return bool3( v[0], v[2], v[0] ); }

bool3 bool4_swizzle_4_to_3_gbr_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_gbr_t::operator bool3() const { return bool3( v[1], v[2], v[0] ); }
bool4_swizzle_4_to_3_bbr_t::operator bool3() const { return bool3( v[2], v[2], v[0] ); }

bool3 bool4_swizzle_4_to_3_abr_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_abr_t::operator bool3() const { return bool3( v[3], v[2], v[0] ); }
bool4_swizzle_4_to_3_rar_t::operator bool3() const { return bool3( v[0], v[3], v[0] ); }

bool3 bool4_swizzle_4_to_3_gar_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_gar_t::operator bool3() const { return bool3( v[1], v[3], v[0] ); }

bool3 bool4_swizzle_4_to_3_bar_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_bar_t::operator bool3() const { return bool3( v[2], v[3], v[0] ); }
bool4_swizzle_4_to_3_aar_t::operator bool3() const { return bool3( v[3], v[3], v[0] ); }
bool4_swizzle_4_to_3_rrg_t::operator bool3() const { return bool3( v[0], v[0], v[1] ); }
bool4_swizzle_4_to_3_grg_t::operator bool3() const { return bool3( v[1], v[0], v[1] ); }

bool3 bool4_swizzle_4_to_3_brg_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_brg_t::operator bool3() const { return bool3( v[2], v[0], v[1] ); }

bool3 bool4_swizzle_4_to_3_arg_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_arg_t::operator bool3() const { return bool3( v[3], v[0], v[1] ); }
bool4_swizzle_4_to_3_rgg_t::operator bool3() const { return bool3( v[0], v[1], v[1] ); }
bool4_swizzle_4_to_3_ggg_t::operator bool3() const { return bool3( v[1], v[1], v[1] ); }
bool4_swizzle_4_to_3_bgg_t::operator bool3() const { return bool3( v[2], v[1], v[1] ); }
bool4_swizzle_4_to_3_agg_t::operator bool3() const { return bool3( v[3], v[1], v[1] ); }

bool3 bool4_swizzle_4_to_3_rbg_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_rbg_t::operator bool3() const { return bool3( v[0], v[2], v[1] ); }
bool4_swizzle_4_to_3_gbg_t::operator bool3() const { return bool3( v[1], v[2], v[1] ); }
bool4_swizzle_4_to_3_bbg_t::operator bool3() const { return bool3( v[2], v[2], v[1] ); }

bool3 bool4_swizzle_4_to_3_abg_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_abg_t::operator bool3() const { return bool3( v[3], v[2], v[1] ); }

bool3 bool4_swizzle_4_to_3_rag_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_rag_t::operator bool3() const { return bool3( v[0], v[3], v[1] ); }
bool4_swizzle_4_to_3_gag_t::operator bool3() const { return bool3( v[1], v[3], v[1] ); }

bool3 bool4_swizzle_4_to_3_bag_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_bag_t::operator bool3() const { return bool3( v[2], v[3], v[1] ); }
bool4_swizzle_4_to_3_aag_t::operator bool3() const { return bool3( v[3], v[3], v[1] ); }
bool4_swizzle_4_to_3_rrb_t::operator bool3() const { return bool3( v[0], v[0], v[2] ); }

bool3 bool4_swizzle_4_to_3_grb_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_grb_t::operator bool3() const { return bool3( v[1], v[0], v[2] ); }
bool4_swizzle_4_to_3_brb_t::operator bool3() const { return bool3( v[2], v[0], v[2] ); }

bool3 bool4_swizzle_4_to_3_arb_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_arb_t::operator bool3() const { return bool3( v[3], v[0], v[2] ); }

bool3 bool4_swizzle_4_to_3_rgb_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_rgb_t::operator bool3() const { return bool3( v[0], v[1], v[2] ); }
bool4_swizzle_4_to_3_ggb_t::operator bool3() const { return bool3( v[1], v[1], v[2] ); }
bool4_swizzle_4_to_3_bgb_t::operator bool3() const { return bool3( v[2], v[1], v[2] ); }

bool3 bool4_swizzle_4_to_3_agb_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_agb_t::operator bool3() const { return bool3( v[3], v[1], v[2] ); }
bool4_swizzle_4_to_3_rbb_t::operator bool3() const { return bool3( v[0], v[2], v[2] ); }
bool4_swizzle_4_to_3_gbb_t::operator bool3() const { return bool3( v[1], v[2], v[2] ); }
bool4_swizzle_4_to_3_bbb_t::operator bool3() const { return bool3( v[2], v[2], v[2] ); }
bool4_swizzle_4_to_3_abb_t::operator bool3() const { return bool3( v[3], v[2], v[2] ); }

bool3 bool4_swizzle_4_to_3_rab_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_rab_t::operator bool3() const { return bool3( v[0], v[3], v[2] ); }

bool3 bool4_swizzle_4_to_3_gab_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_gab_t::operator bool3() const { return bool3( v[1], v[3], v[2] ); }
bool4_swizzle_4_to_3_bab_t::operator bool3() const { return bool3( v[2], v[3], v[2] ); }
bool4_swizzle_4_to_3_aab_t::operator bool3() const { return bool3( v[3], v[3], v[2] ); }
bool4_swizzle_4_to_3_rra_t::operator bool3() const { return bool3( v[0], v[0], v[3] ); }

bool3 bool4_swizzle_4_to_3_gra_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_gra_t::operator bool3() const { return bool3( v[1], v[0], v[3] ); }

bool3 bool4_swizzle_4_to_3_bra_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_bra_t::operator bool3() const { return bool3( v[2], v[0], v[3] ); }
bool4_swizzle_4_to_3_ara_t::operator bool3() const { return bool3( v[3], v[0], v[3] ); }

bool3 bool4_swizzle_4_to_3_rga_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_rga_t::operator bool3() const { return bool3( v[0], v[1], v[3] ); }
bool4_swizzle_4_to_3_gga_t::operator bool3() const { return bool3( v[1], v[1], v[3] ); }

bool3 bool4_swizzle_4_to_3_bga_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_bga_t::operator bool3() const { return bool3( v[2], v[1], v[3] ); }
bool4_swizzle_4_to_3_aga_t::operator bool3() const { return bool3( v[3], v[1], v[3] ); }

bool3 bool4_swizzle_4_to_3_rba_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_rba_t::operator bool3() const { return bool3( v[0], v[2], v[3] ); }

bool3 bool4_swizzle_4_to_3_gba_t::operator=( const bool3& vec )
{
	return bool3(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z
	);
}

bool4_swizzle_4_to_3_gba_t::operator bool3() const { return bool3( v[1], v[2], v[3] ); }
bool4_swizzle_4_to_3_bba_t::operator bool3() const { return bool3( v[2], v[2], v[3] ); }
bool4_swizzle_4_to_3_aba_t::operator bool3() const { return bool3( v[3], v[2], v[3] ); }
bool4_swizzle_4_to_3_raa_t::operator bool3() const { return bool3( v[0], v[3], v[3] ); }
bool4_swizzle_4_to_3_gaa_t::operator bool3() const { return bool3( v[1], v[3], v[3] ); }
bool4_swizzle_4_to_3_baa_t::operator bool3() const { return bool3( v[2], v[3], v[3] ); }
bool4_swizzle_4_to_3_aaa_t::operator bool3() const { return bool3( v[3], v[3], v[3] ); }
bool4_swizzle_4_to_4_rrrr_t::operator bool4() const { return bool4( v[0], v[0], v[0], v[0] ); }
bool4_swizzle_4_to_4_grrr_t::operator bool4() const { return bool4( v[1], v[0], v[0], v[0] ); }
bool4_swizzle_4_to_4_brrr_t::operator bool4() const { return bool4( v[2], v[0], v[0], v[0] ); }
bool4_swizzle_4_to_4_arrr_t::operator bool4() const { return bool4( v[3], v[0], v[0], v[0] ); }
bool4_swizzle_4_to_4_rgrr_t::operator bool4() const { return bool4( v[0], v[1], v[0], v[0] ); }
bool4_swizzle_4_to_4_ggrr_t::operator bool4() const { return bool4( v[1], v[1], v[0], v[0] ); }
bool4_swizzle_4_to_4_bgrr_t::operator bool4() const { return bool4( v[2], v[1], v[0], v[0] ); }
bool4_swizzle_4_to_4_agrr_t::operator bool4() const { return bool4( v[3], v[1], v[0], v[0] ); }
bool4_swizzle_4_to_4_rbrr_t::operator bool4() const { return bool4( v[0], v[2], v[0], v[0] ); }
bool4_swizzle_4_to_4_gbrr_t::operator bool4() const { return bool4( v[1], v[2], v[0], v[0] ); }
bool4_swizzle_4_to_4_bbrr_t::operator bool4() const { return bool4( v[2], v[2], v[0], v[0] ); }
bool4_swizzle_4_to_4_abrr_t::operator bool4() const { return bool4( v[3], v[2], v[0], v[0] ); }
bool4_swizzle_4_to_4_rarr_t::operator bool4() const { return bool4( v[0], v[3], v[0], v[0] ); }
bool4_swizzle_4_to_4_garr_t::operator bool4() const { return bool4( v[1], v[3], v[0], v[0] ); }
bool4_swizzle_4_to_4_barr_t::operator bool4() const { return bool4( v[2], v[3], v[0], v[0] ); }
bool4_swizzle_4_to_4_aarr_t::operator bool4() const { return bool4( v[3], v[3], v[0], v[0] ); }
bool4_swizzle_4_to_4_rrgr_t::operator bool4() const { return bool4( v[0], v[0], v[1], v[0] ); }
bool4_swizzle_4_to_4_grgr_t::operator bool4() const { return bool4( v[1], v[0], v[1], v[0] ); }
bool4_swizzle_4_to_4_brgr_t::operator bool4() const { return bool4( v[2], v[0], v[1], v[0] ); }
bool4_swizzle_4_to_4_argr_t::operator bool4() const { return bool4( v[3], v[0], v[1], v[0] ); }
bool4_swizzle_4_to_4_rggr_t::operator bool4() const { return bool4( v[0], v[1], v[1], v[0] ); }
bool4_swizzle_4_to_4_gggr_t::operator bool4() const { return bool4( v[1], v[1], v[1], v[0] ); }
bool4_swizzle_4_to_4_bggr_t::operator bool4() const { return bool4( v[2], v[1], v[1], v[0] ); }
bool4_swizzle_4_to_4_aggr_t::operator bool4() const { return bool4( v[3], v[1], v[1], v[0] ); }
bool4_swizzle_4_to_4_rbgr_t::operator bool4() const { return bool4( v[0], v[2], v[1], v[0] ); }
bool4_swizzle_4_to_4_gbgr_t::operator bool4() const { return bool4( v[1], v[2], v[1], v[0] ); }
bool4_swizzle_4_to_4_bbgr_t::operator bool4() const { return bool4( v[2], v[2], v[1], v[0] ); }

bool4 bool4_swizzle_4_to_4_abgr_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_abgr_t::operator bool4() const { return bool4( v[3], v[2], v[1], v[0] ); }
bool4_swizzle_4_to_4_ragr_t::operator bool4() const { return bool4( v[0], v[3], v[1], v[0] ); }
bool4_swizzle_4_to_4_gagr_t::operator bool4() const { return bool4( v[1], v[3], v[1], v[0] ); }

bool4 bool4_swizzle_4_to_4_bagr_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_bagr_t::operator bool4() const { return bool4( v[2], v[3], v[1], v[0] ); }
bool4_swizzle_4_to_4_aagr_t::operator bool4() const { return bool4( v[3], v[3], v[1], v[0] ); }
bool4_swizzle_4_to_4_rrbr_t::operator bool4() const { return bool4( v[0], v[0], v[2], v[0] ); }
bool4_swizzle_4_to_4_grbr_t::operator bool4() const { return bool4( v[1], v[0], v[2], v[0] ); }
bool4_swizzle_4_to_4_brbr_t::operator bool4() const { return bool4( v[2], v[0], v[2], v[0] ); }
bool4_swizzle_4_to_4_arbr_t::operator bool4() const { return bool4( v[3], v[0], v[2], v[0] ); }
bool4_swizzle_4_to_4_rgbr_t::operator bool4() const { return bool4( v[0], v[1], v[2], v[0] ); }
bool4_swizzle_4_to_4_ggbr_t::operator bool4() const { return bool4( v[1], v[1], v[2], v[0] ); }
bool4_swizzle_4_to_4_bgbr_t::operator bool4() const { return bool4( v[2], v[1], v[2], v[0] ); }

bool4 bool4_swizzle_4_to_4_agbr_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_agbr_t::operator bool4() const { return bool4( v[3], v[1], v[2], v[0] ); }
bool4_swizzle_4_to_4_rbbr_t::operator bool4() const { return bool4( v[0], v[2], v[2], v[0] ); }
bool4_swizzle_4_to_4_gbbr_t::operator bool4() const { return bool4( v[1], v[2], v[2], v[0] ); }
bool4_swizzle_4_to_4_bbbr_t::operator bool4() const { return bool4( v[2], v[2], v[2], v[0] ); }
bool4_swizzle_4_to_4_abbr_t::operator bool4() const { return bool4( v[3], v[2], v[2], v[0] ); }
bool4_swizzle_4_to_4_rabr_t::operator bool4() const { return bool4( v[0], v[3], v[2], v[0] ); }

bool4 bool4_swizzle_4_to_4_gabr_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_gabr_t::operator bool4() const { return bool4( v[1], v[3], v[2], v[0] ); }
bool4_swizzle_4_to_4_babr_t::operator bool4() const { return bool4( v[2], v[3], v[2], v[0] ); }
bool4_swizzle_4_to_4_aabr_t::operator bool4() const { return bool4( v[3], v[3], v[2], v[0] ); }
bool4_swizzle_4_to_4_rrar_t::operator bool4() const { return bool4( v[0], v[0], v[3], v[0] ); }
bool4_swizzle_4_to_4_grar_t::operator bool4() const { return bool4( v[1], v[0], v[3], v[0] ); }
bool4_swizzle_4_to_4_brar_t::operator bool4() const { return bool4( v[2], v[0], v[3], v[0] ); }
bool4_swizzle_4_to_4_arar_t::operator bool4() const { return bool4( v[3], v[0], v[3], v[0] ); }
bool4_swizzle_4_to_4_rgar_t::operator bool4() const { return bool4( v[0], v[1], v[3], v[0] ); }
bool4_swizzle_4_to_4_ggar_t::operator bool4() const { return bool4( v[1], v[1], v[3], v[0] ); }

bool4 bool4_swizzle_4_to_4_bgar_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_bgar_t::operator bool4() const { return bool4( v[2], v[1], v[3], v[0] ); }
bool4_swizzle_4_to_4_agar_t::operator bool4() const { return bool4( v[3], v[1], v[3], v[0] ); }
bool4_swizzle_4_to_4_rbar_t::operator bool4() const { return bool4( v[0], v[2], v[3], v[0] ); }

bool4 bool4_swizzle_4_to_4_gbar_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_gbar_t::operator bool4() const { return bool4( v[1], v[2], v[3], v[0] ); }
bool4_swizzle_4_to_4_bbar_t::operator bool4() const { return bool4( v[2], v[2], v[3], v[0] ); }
bool4_swizzle_4_to_4_abar_t::operator bool4() const { return bool4( v[3], v[2], v[3], v[0] ); }
bool4_swizzle_4_to_4_raar_t::operator bool4() const { return bool4( v[0], v[3], v[3], v[0] ); }
bool4_swizzle_4_to_4_gaar_t::operator bool4() const { return bool4( v[1], v[3], v[3], v[0] ); }
bool4_swizzle_4_to_4_baar_t::operator bool4() const { return bool4( v[2], v[3], v[3], v[0] ); }
bool4_swizzle_4_to_4_aaar_t::operator bool4() const { return bool4( v[3], v[3], v[3], v[0] ); }
bool4_swizzle_4_to_4_rrrg_t::operator bool4() const { return bool4( v[0], v[0], v[0], v[1] ); }
bool4_swizzle_4_to_4_grrg_t::operator bool4() const { return bool4( v[1], v[0], v[0], v[1] ); }
bool4_swizzle_4_to_4_brrg_t::operator bool4() const { return bool4( v[2], v[0], v[0], v[1] ); }
bool4_swizzle_4_to_4_arrg_t::operator bool4() const { return bool4( v[3], v[0], v[0], v[1] ); }
bool4_swizzle_4_to_4_rgrg_t::operator bool4() const { return bool4( v[0], v[1], v[0], v[1] ); }
bool4_swizzle_4_to_4_ggrg_t::operator bool4() const { return bool4( v[1], v[1], v[0], v[1] ); }
bool4_swizzle_4_to_4_bgrg_t::operator bool4() const { return bool4( v[2], v[1], v[0], v[1] ); }
bool4_swizzle_4_to_4_agrg_t::operator bool4() const { return bool4( v[3], v[1], v[0], v[1] ); }
bool4_swizzle_4_to_4_rbrg_t::operator bool4() const { return bool4( v[0], v[2], v[0], v[1] ); }
bool4_swizzle_4_to_4_gbrg_t::operator bool4() const { return bool4( v[1], v[2], v[0], v[1] ); }
bool4_swizzle_4_to_4_bbrg_t::operator bool4() const { return bool4( v[2], v[2], v[0], v[1] ); }

bool4 bool4_swizzle_4_to_4_abrg_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_abrg_t::operator bool4() const { return bool4( v[3], v[2], v[0], v[1] ); }
bool4_swizzle_4_to_4_rarg_t::operator bool4() const { return bool4( v[0], v[3], v[0], v[1] ); }
bool4_swizzle_4_to_4_garg_t::operator bool4() const { return bool4( v[1], v[3], v[0], v[1] ); }

bool4 bool4_swizzle_4_to_4_barg_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_barg_t::operator bool4() const { return bool4( v[2], v[3], v[0], v[1] ); }
bool4_swizzle_4_to_4_aarg_t::operator bool4() const { return bool4( v[3], v[3], v[0], v[1] ); }
bool4_swizzle_4_to_4_rrgg_t::operator bool4() const { return bool4( v[0], v[0], v[1], v[1] ); }
bool4_swizzle_4_to_4_grgg_t::operator bool4() const { return bool4( v[1], v[0], v[1], v[1] ); }
bool4_swizzle_4_to_4_brgg_t::operator bool4() const { return bool4( v[2], v[0], v[1], v[1] ); }
bool4_swizzle_4_to_4_argg_t::operator bool4() const { return bool4( v[3], v[0], v[1], v[1] ); }
bool4_swizzle_4_to_4_rggg_t::operator bool4() const { return bool4( v[0], v[1], v[1], v[1] ); }
bool4_swizzle_4_to_4_gggg_t::operator bool4() const { return bool4( v[1], v[1], v[1], v[1] ); }
bool4_swizzle_4_to_4_bggg_t::operator bool4() const { return bool4( v[2], v[1], v[1], v[1] ); }
bool4_swizzle_4_to_4_aggg_t::operator bool4() const { return bool4( v[3], v[1], v[1], v[1] ); }
bool4_swizzle_4_to_4_rbgg_t::operator bool4() const { return bool4( v[0], v[2], v[1], v[1] ); }
bool4_swizzle_4_to_4_gbgg_t::operator bool4() const { return bool4( v[1], v[2], v[1], v[1] ); }
bool4_swizzle_4_to_4_bbgg_t::operator bool4() const { return bool4( v[2], v[2], v[1], v[1] ); }
bool4_swizzle_4_to_4_abgg_t::operator bool4() const { return bool4( v[3], v[2], v[1], v[1] ); }
bool4_swizzle_4_to_4_ragg_t::operator bool4() const { return bool4( v[0], v[3], v[1], v[1] ); }
bool4_swizzle_4_to_4_gagg_t::operator bool4() const { return bool4( v[1], v[3], v[1], v[1] ); }
bool4_swizzle_4_to_4_bagg_t::operator bool4() const { return bool4( v[2], v[3], v[1], v[1] ); }
bool4_swizzle_4_to_4_aagg_t::operator bool4() const { return bool4( v[3], v[3], v[1], v[1] ); }
bool4_swizzle_4_to_4_rrbg_t::operator bool4() const { return bool4( v[0], v[0], v[2], v[1] ); }
bool4_swizzle_4_to_4_grbg_t::operator bool4() const { return bool4( v[1], v[0], v[2], v[1] ); }
bool4_swizzle_4_to_4_brbg_t::operator bool4() const { return bool4( v[2], v[0], v[2], v[1] ); }

bool4 bool4_swizzle_4_to_4_arbg_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_arbg_t::operator bool4() const { return bool4( v[3], v[0], v[2], v[1] ); }
bool4_swizzle_4_to_4_rgbg_t::operator bool4() const { return bool4( v[0], v[1], v[2], v[1] ); }
bool4_swizzle_4_to_4_ggbg_t::operator bool4() const { return bool4( v[1], v[1], v[2], v[1] ); }
bool4_swizzle_4_to_4_bgbg_t::operator bool4() const { return bool4( v[2], v[1], v[2], v[1] ); }
bool4_swizzle_4_to_4_agbg_t::operator bool4() const { return bool4( v[3], v[1], v[2], v[1] ); }
bool4_swizzle_4_to_4_rbbg_t::operator bool4() const { return bool4( v[0], v[2], v[2], v[1] ); }
bool4_swizzle_4_to_4_gbbg_t::operator bool4() const { return bool4( v[1], v[2], v[2], v[1] ); }
bool4_swizzle_4_to_4_bbbg_t::operator bool4() const { return bool4( v[2], v[2], v[2], v[1] ); }
bool4_swizzle_4_to_4_abbg_t::operator bool4() const { return bool4( v[3], v[2], v[2], v[1] ); }

bool4 bool4_swizzle_4_to_4_rabg_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_rabg_t::operator bool4() const { return bool4( v[0], v[3], v[2], v[1] ); }
bool4_swizzle_4_to_4_gabg_t::operator bool4() const { return bool4( v[1], v[3], v[2], v[1] ); }
bool4_swizzle_4_to_4_babg_t::operator bool4() const { return bool4( v[2], v[3], v[2], v[1] ); }
bool4_swizzle_4_to_4_aabg_t::operator bool4() const { return bool4( v[3], v[3], v[2], v[1] ); }
bool4_swizzle_4_to_4_rrag_t::operator bool4() const { return bool4( v[0], v[0], v[3], v[1] ); }
bool4_swizzle_4_to_4_grag_t::operator bool4() const { return bool4( v[1], v[0], v[3], v[1] ); }

bool4 bool4_swizzle_4_to_4_brag_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_brag_t::operator bool4() const { return bool4( v[2], v[0], v[3], v[1] ); }
bool4_swizzle_4_to_4_arag_t::operator bool4() const { return bool4( v[3], v[0], v[3], v[1] ); }
bool4_swizzle_4_to_4_rgag_t::operator bool4() const { return bool4( v[0], v[1], v[3], v[1] ); }
bool4_swizzle_4_to_4_ggag_t::operator bool4() const { return bool4( v[1], v[1], v[3], v[1] ); }
bool4_swizzle_4_to_4_bgag_t::operator bool4() const { return bool4( v[2], v[1], v[3], v[1] ); }
bool4_swizzle_4_to_4_agag_t::operator bool4() const { return bool4( v[3], v[1], v[3], v[1] ); }

bool4 bool4_swizzle_4_to_4_rbag_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_rbag_t::operator bool4() const { return bool4( v[0], v[2], v[3], v[1] ); }
bool4_swizzle_4_to_4_gbag_t::operator bool4() const { return bool4( v[1], v[2], v[3], v[1] ); }
bool4_swizzle_4_to_4_bbag_t::operator bool4() const { return bool4( v[2], v[2], v[3], v[1] ); }
bool4_swizzle_4_to_4_abag_t::operator bool4() const { return bool4( v[3], v[2], v[3], v[1] ); }
bool4_swizzle_4_to_4_raag_t::operator bool4() const { return bool4( v[0], v[3], v[3], v[1] ); }
bool4_swizzle_4_to_4_gaag_t::operator bool4() const { return bool4( v[1], v[3], v[3], v[1] ); }
bool4_swizzle_4_to_4_baag_t::operator bool4() const { return bool4( v[2], v[3], v[3], v[1] ); }
bool4_swizzle_4_to_4_aaag_t::operator bool4() const { return bool4( v[3], v[3], v[3], v[1] ); }
bool4_swizzle_4_to_4_rrrb_t::operator bool4() const { return bool4( v[0], v[0], v[0], v[2] ); }
bool4_swizzle_4_to_4_grrb_t::operator bool4() const { return bool4( v[1], v[0], v[0], v[2] ); }
bool4_swizzle_4_to_4_brrb_t::operator bool4() const { return bool4( v[2], v[0], v[0], v[2] ); }
bool4_swizzle_4_to_4_arrb_t::operator bool4() const { return bool4( v[3], v[0], v[0], v[2] ); }
bool4_swizzle_4_to_4_rgrb_t::operator bool4() const { return bool4( v[0], v[1], v[0], v[2] ); }
bool4_swizzle_4_to_4_ggrb_t::operator bool4() const { return bool4( v[1], v[1], v[0], v[2] ); }
bool4_swizzle_4_to_4_bgrb_t::operator bool4() const { return bool4( v[2], v[1], v[0], v[2] ); }

bool4 bool4_swizzle_4_to_4_agrb_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_agrb_t::operator bool4() const { return bool4( v[3], v[1], v[0], v[2] ); }
bool4_swizzle_4_to_4_rbrb_t::operator bool4() const { return bool4( v[0], v[2], v[0], v[2] ); }
bool4_swizzle_4_to_4_gbrb_t::operator bool4() const { return bool4( v[1], v[2], v[0], v[2] ); }
bool4_swizzle_4_to_4_bbrb_t::operator bool4() const { return bool4( v[2], v[2], v[0], v[2] ); }
bool4_swizzle_4_to_4_abrb_t::operator bool4() const { return bool4( v[3], v[2], v[0], v[2] ); }
bool4_swizzle_4_to_4_rarb_t::operator bool4() const { return bool4( v[0], v[3], v[0], v[2] ); }

bool4 bool4_swizzle_4_to_4_garb_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_garb_t::operator bool4() const { return bool4( v[1], v[3], v[0], v[2] ); }
bool4_swizzle_4_to_4_barb_t::operator bool4() const { return bool4( v[2], v[3], v[0], v[2] ); }
bool4_swizzle_4_to_4_aarb_t::operator bool4() const { return bool4( v[3], v[3], v[0], v[2] ); }
bool4_swizzle_4_to_4_rrgb_t::operator bool4() const { return bool4( v[0], v[0], v[1], v[2] ); }
bool4_swizzle_4_to_4_grgb_t::operator bool4() const { return bool4( v[1], v[0], v[1], v[2] ); }
bool4_swizzle_4_to_4_brgb_t::operator bool4() const { return bool4( v[2], v[0], v[1], v[2] ); }

bool4 bool4_swizzle_4_to_4_argb_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_argb_t::operator bool4() const { return bool4( v[3], v[0], v[1], v[2] ); }
bool4_swizzle_4_to_4_rggb_t::operator bool4() const { return bool4( v[0], v[1], v[1], v[2] ); }
bool4_swizzle_4_to_4_gggb_t::operator bool4() const { return bool4( v[1], v[1], v[1], v[2] ); }
bool4_swizzle_4_to_4_bggb_t::operator bool4() const { return bool4( v[2], v[1], v[1], v[2] ); }
bool4_swizzle_4_to_4_aggb_t::operator bool4() const { return bool4( v[3], v[1], v[1], v[2] ); }
bool4_swizzle_4_to_4_rbgb_t::operator bool4() const { return bool4( v[0], v[2], v[1], v[2] ); }
bool4_swizzle_4_to_4_gbgb_t::operator bool4() const { return bool4( v[1], v[2], v[1], v[2] ); }
bool4_swizzle_4_to_4_bbgb_t::operator bool4() const { return bool4( v[2], v[2], v[1], v[2] ); }
bool4_swizzle_4_to_4_abgb_t::operator bool4() const { return bool4( v[3], v[2], v[1], v[2] ); }

bool4 bool4_swizzle_4_to_4_ragb_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_ragb_t::operator bool4() const { return bool4( v[0], v[3], v[1], v[2] ); }
bool4_swizzle_4_to_4_gagb_t::operator bool4() const { return bool4( v[1], v[3], v[1], v[2] ); }
bool4_swizzle_4_to_4_bagb_t::operator bool4() const { return bool4( v[2], v[3], v[1], v[2] ); }
bool4_swizzle_4_to_4_aagb_t::operator bool4() const { return bool4( v[3], v[3], v[1], v[2] ); }
bool4_swizzle_4_to_4_rrbb_t::operator bool4() const { return bool4( v[0], v[0], v[2], v[2] ); }
bool4_swizzle_4_to_4_grbb_t::operator bool4() const { return bool4( v[1], v[0], v[2], v[2] ); }
bool4_swizzle_4_to_4_brbb_t::operator bool4() const { return bool4( v[2], v[0], v[2], v[2] ); }
bool4_swizzle_4_to_4_arbb_t::operator bool4() const { return bool4( v[3], v[0], v[2], v[2] ); }
bool4_swizzle_4_to_4_rgbb_t::operator bool4() const { return bool4( v[0], v[1], v[2], v[2] ); }
bool4_swizzle_4_to_4_ggbb_t::operator bool4() const { return bool4( v[1], v[1], v[2], v[2] ); }
bool4_swizzle_4_to_4_bgbb_t::operator bool4() const { return bool4( v[2], v[1], v[2], v[2] ); }
bool4_swizzle_4_to_4_agbb_t::operator bool4() const { return bool4( v[3], v[1], v[2], v[2] ); }
bool4_swizzle_4_to_4_rbbb_t::operator bool4() const { return bool4( v[0], v[2], v[2], v[2] ); }
bool4_swizzle_4_to_4_gbbb_t::operator bool4() const { return bool4( v[1], v[2], v[2], v[2] ); }
bool4_swizzle_4_to_4_bbbb_t::operator bool4() const { return bool4( v[2], v[2], v[2], v[2] ); }
bool4_swizzle_4_to_4_abbb_t::operator bool4() const { return bool4( v[3], v[2], v[2], v[2] ); }
bool4_swizzle_4_to_4_rabb_t::operator bool4() const { return bool4( v[0], v[3], v[2], v[2] ); }
bool4_swizzle_4_to_4_gabb_t::operator bool4() const { return bool4( v[1], v[3], v[2], v[2] ); }
bool4_swizzle_4_to_4_babb_t::operator bool4() const { return bool4( v[2], v[3], v[2], v[2] ); }
bool4_swizzle_4_to_4_aabb_t::operator bool4() const { return bool4( v[3], v[3], v[2], v[2] ); }
bool4_swizzle_4_to_4_rrab_t::operator bool4() const { return bool4( v[0], v[0], v[3], v[2] ); }

bool4 bool4_swizzle_4_to_4_grab_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_grab_t::operator bool4() const { return bool4( v[1], v[0], v[3], v[2] ); }
bool4_swizzle_4_to_4_brab_t::operator bool4() const { return bool4( v[2], v[0], v[3], v[2] ); }
bool4_swizzle_4_to_4_arab_t::operator bool4() const { return bool4( v[3], v[0], v[3], v[2] ); }

bool4 bool4_swizzle_4_to_4_rgab_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_rgab_t::operator bool4() const { return bool4( v[0], v[1], v[3], v[2] ); }
bool4_swizzle_4_to_4_ggab_t::operator bool4() const { return bool4( v[1], v[1], v[3], v[2] ); }
bool4_swizzle_4_to_4_bgab_t::operator bool4() const { return bool4( v[2], v[1], v[3], v[2] ); }
bool4_swizzle_4_to_4_agab_t::operator bool4() const { return bool4( v[3], v[1], v[3], v[2] ); }
bool4_swizzle_4_to_4_rbab_t::operator bool4() const { return bool4( v[0], v[2], v[3], v[2] ); }
bool4_swizzle_4_to_4_gbab_t::operator bool4() const { return bool4( v[1], v[2], v[3], v[2] ); }
bool4_swizzle_4_to_4_bbab_t::operator bool4() const { return bool4( v[2], v[2], v[3], v[2] ); }
bool4_swizzle_4_to_4_abab_t::operator bool4() const { return bool4( v[3], v[2], v[3], v[2] ); }
bool4_swizzle_4_to_4_raab_t::operator bool4() const { return bool4( v[0], v[3], v[3], v[2] ); }
bool4_swizzle_4_to_4_gaab_t::operator bool4() const { return bool4( v[1], v[3], v[3], v[2] ); }
bool4_swizzle_4_to_4_baab_t::operator bool4() const { return bool4( v[2], v[3], v[3], v[2] ); }
bool4_swizzle_4_to_4_aaab_t::operator bool4() const { return bool4( v[3], v[3], v[3], v[2] ); }
bool4_swizzle_4_to_4_rrra_t::operator bool4() const { return bool4( v[0], v[0], v[0], v[3] ); }
bool4_swizzle_4_to_4_grra_t::operator bool4() const { return bool4( v[1], v[0], v[0], v[3] ); }
bool4_swizzle_4_to_4_brra_t::operator bool4() const { return bool4( v[2], v[0], v[0], v[3] ); }
bool4_swizzle_4_to_4_arra_t::operator bool4() const { return bool4( v[3], v[0], v[0], v[3] ); }
bool4_swizzle_4_to_4_rgra_t::operator bool4() const { return bool4( v[0], v[1], v[0], v[3] ); }
bool4_swizzle_4_to_4_ggra_t::operator bool4() const { return bool4( v[1], v[1], v[0], v[3] ); }

bool4 bool4_swizzle_4_to_4_bgra_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_bgra_t::operator bool4() const { return bool4( v[2], v[1], v[0], v[3] ); }
bool4_swizzle_4_to_4_agra_t::operator bool4() const { return bool4( v[3], v[1], v[0], v[3] ); }
bool4_swizzle_4_to_4_rbra_t::operator bool4() const { return bool4( v[0], v[2], v[0], v[3] ); }

bool4 bool4_swizzle_4_to_4_gbra_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_gbra_t::operator bool4() const { return bool4( v[1], v[2], v[0], v[3] ); }
bool4_swizzle_4_to_4_bbra_t::operator bool4() const { return bool4( v[2], v[2], v[0], v[3] ); }
bool4_swizzle_4_to_4_abra_t::operator bool4() const { return bool4( v[3], v[2], v[0], v[3] ); }
bool4_swizzle_4_to_4_rara_t::operator bool4() const { return bool4( v[0], v[3], v[0], v[3] ); }
bool4_swizzle_4_to_4_gara_t::operator bool4() const { return bool4( v[1], v[3], v[0], v[3] ); }
bool4_swizzle_4_to_4_bara_t::operator bool4() const { return bool4( v[2], v[3], v[0], v[3] ); }
bool4_swizzle_4_to_4_aara_t::operator bool4() const { return bool4( v[3], v[3], v[0], v[3] ); }
bool4_swizzle_4_to_4_rrga_t::operator bool4() const { return bool4( v[0], v[0], v[1], v[3] ); }
bool4_swizzle_4_to_4_grga_t::operator bool4() const { return bool4( v[1], v[0], v[1], v[3] ); }

bool4 bool4_swizzle_4_to_4_brga_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_brga_t::operator bool4() const { return bool4( v[2], v[0], v[1], v[3] ); }
bool4_swizzle_4_to_4_arga_t::operator bool4() const { return bool4( v[3], v[0], v[1], v[3] ); }
bool4_swizzle_4_to_4_rgga_t::operator bool4() const { return bool4( v[0], v[1], v[1], v[3] ); }
bool4_swizzle_4_to_4_ggga_t::operator bool4() const { return bool4( v[1], v[1], v[1], v[3] ); }
bool4_swizzle_4_to_4_bgga_t::operator bool4() const { return bool4( v[2], v[1], v[1], v[3] ); }
bool4_swizzle_4_to_4_agga_t::operator bool4() const { return bool4( v[3], v[1], v[1], v[3] ); }

bool4 bool4_swizzle_4_to_4_rbga_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_rbga_t::operator bool4() const { return bool4( v[0], v[2], v[1], v[3] ); }
bool4_swizzle_4_to_4_gbga_t::operator bool4() const { return bool4( v[1], v[2], v[1], v[3] ); }
bool4_swizzle_4_to_4_bbga_t::operator bool4() const { return bool4( v[2], v[2], v[1], v[3] ); }
bool4_swizzle_4_to_4_abga_t::operator bool4() const { return bool4( v[3], v[2], v[1], v[3] ); }
bool4_swizzle_4_to_4_raga_t::operator bool4() const { return bool4( v[0], v[3], v[1], v[3] ); }
bool4_swizzle_4_to_4_gaga_t::operator bool4() const { return bool4( v[1], v[3], v[1], v[3] ); }
bool4_swizzle_4_to_4_baga_t::operator bool4() const { return bool4( v[2], v[3], v[1], v[3] ); }
bool4_swizzle_4_to_4_aaga_t::operator bool4() const { return bool4( v[3], v[3], v[1], v[3] ); }
bool4_swizzle_4_to_4_rrba_t::operator bool4() const { return bool4( v[0], v[0], v[2], v[3] ); }

bool4 bool4_swizzle_4_to_4_grba_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_grba_t::operator bool4() const { return bool4( v[1], v[0], v[2], v[3] ); }
bool4_swizzle_4_to_4_brba_t::operator bool4() const { return bool4( v[2], v[0], v[2], v[3] ); }
bool4_swizzle_4_to_4_arba_t::operator bool4() const { return bool4( v[3], v[0], v[2], v[3] ); }

bool4 bool4_swizzle_4_to_4_rgba_t::operator=( const bool4& vec )
{
	return bool4(
		v[0] = vec.x,
		v[1] = vec.y,
		v[2] = vec.z,
		v[3] = vec.w
	);
}

bool4_swizzle_4_to_4_rgba_t::operator bool4() const { return bool4( v[0], v[1], v[2], v[3] ); }
bool4_swizzle_4_to_4_ggba_t::operator bool4() const { return bool4( v[1], v[1], v[2], v[3] ); }
bool4_swizzle_4_to_4_bgba_t::operator bool4() const { return bool4( v[2], v[1], v[2], v[3] ); }
bool4_swizzle_4_to_4_agba_t::operator bool4() const { return bool4( v[3], v[1], v[2], v[3] ); }
bool4_swizzle_4_to_4_rbba_t::operator bool4() const { return bool4( v[0], v[2], v[2], v[3] ); }
bool4_swizzle_4_to_4_gbba_t::operator bool4() const { return bool4( v[1], v[2], v[2], v[3] ); }
bool4_swizzle_4_to_4_bbba_t::operator bool4() const { return bool4( v[2], v[2], v[2], v[3] ); }
bool4_swizzle_4_to_4_abba_t::operator bool4() const { return bool4( v[3], v[2], v[2], v[3] ); }
bool4_swizzle_4_to_4_raba_t::operator bool4() const { return bool4( v[0], v[3], v[2], v[3] ); }
bool4_swizzle_4_to_4_gaba_t::operator bool4() const { return bool4( v[1], v[3], v[2], v[3] ); }
bool4_swizzle_4_to_4_baba_t::operator bool4() const { return bool4( v[2], v[3], v[2], v[3] ); }
bool4_swizzle_4_to_4_aaba_t::operator bool4() const { return bool4( v[3], v[3], v[2], v[3] ); }
bool4_swizzle_4_to_4_rraa_t::operator bool4() const { return bool4( v[0], v[0], v[3], v[3] ); }
bool4_swizzle_4_to_4_graa_t::operator bool4() const { return bool4( v[1], v[0], v[3], v[3] ); }
bool4_swizzle_4_to_4_braa_t::operator bool4() const { return bool4( v[2], v[0], v[3], v[3] ); }
bool4_swizzle_4_to_4_araa_t::operator bool4() const { return bool4( v[3], v[0], v[3], v[3] ); }
bool4_swizzle_4_to_4_rgaa_t::operator bool4() const { return bool4( v[0], v[1], v[3], v[3] ); }
bool4_swizzle_4_to_4_ggaa_t::operator bool4() const { return bool4( v[1], v[1], v[3], v[3] ); }
bool4_swizzle_4_to_4_bgaa_t::operator bool4() const { return bool4( v[2], v[1], v[3], v[3] ); }
bool4_swizzle_4_to_4_agaa_t::operator bool4() const { return bool4( v[3], v[1], v[3], v[3] ); }
bool4_swizzle_4_to_4_rbaa_t::operator bool4() const { return bool4( v[0], v[2], v[3], v[3] ); }
bool4_swizzle_4_to_4_gbaa_t::operator bool4() const { return bool4( v[1], v[2], v[3], v[3] ); }
bool4_swizzle_4_to_4_bbaa_t::operator bool4() const { return bool4( v[2], v[2], v[3], v[3] ); }
bool4_swizzle_4_to_4_abaa_t::operator bool4() const { return bool4( v[3], v[2], v[3], v[3] ); }
bool4_swizzle_4_to_4_raaa_t::operator bool4() const { return bool4( v[0], v[3], v[3], v[3] ); }
bool4_swizzle_4_to_4_gaaa_t::operator bool4() const { return bool4( v[1], v[3], v[3], v[3] ); }
bool4_swizzle_4_to_4_baaa_t::operator bool4() const { return bool4( v[2], v[3], v[3], v[3] ); }
bool4_swizzle_4_to_4_aaaa_t::operator bool4() const { return bool4( v[3], v[3], v[3], v[3] ); }
